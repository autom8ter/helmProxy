// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type App struct {
	Name       string                 `json:"name"`
	Namespace  string                 `json:"namespace"`
	Image      string                 `json:"image"`
	Args       []string               `json:"args"`
	Env        map[string]interface{} `json:"env"`
	Ports      map[string]interface{} `json:"ports"`
	Replicas   int                    `json:"replicas"`
	Networking *Networking            `json:"networking"`
	Status     *AppStatus             `json:"status"`
	Labels     map[string]interface{} `json:"labels"`
	Selector   map[string]interface{} `json:"selector"`
}

type AppInput struct {
	Name       string                 `json:"name"`
	Namespace  string                 `json:"namespace"`
	Image      string                 `json:"image"`
	Args       []string               `json:"args"`
	Env        map[string]interface{} `json:"env"`
	Ports      map[string]interface{} `json:"ports"`
	Replicas   int                    `json:"replicas"`
	Networking *NetworkingInput       `json:"networking"`
	Labels     map[string]interface{} `json:"labels"`
	Selector   map[string]interface{} `json:"selector"`
}

type AppStatus struct {
	Replicas []*Replica `json:"replicas"`
}

type HTTPRoute struct {
	Name             string   `json:"name"`
	Port             int      `json:"port"`
	PathPrefix       *string  `json:"path_prefix"`
	RewriteURI       *string  `json:"rewrite_uri"`
	AllowOrigins     []string `json:"allow_origins"`
	AllowMethods     []string `json:"allow_methods"`
	AllowHeaders     []string `json:"allow_headers"`
	ExposeHeaders    []string `json:"expose_headers"`
	AllowCredentials *bool    `json:"allow_credentials"`
}

type HTTPRouteInput struct {
	Name             *string  `json:"name"`
	Port             *int     `json:"port"`
	PathPrefix       *string  `json:"path_prefix"`
	RewriteURI       *string  `json:"rewrite_uri"`
	AllowOrigins     []string `json:"allow_origins"`
	AllowMethods     []string `json:"allow_methods"`
	AllowHeaders     []string `json:"allow_headers"`
	ExposeHeaders    []string `json:"expose_headers"`
	AllowCredentials *bool    `json:"allow_credentials"`
}

type Log struct {
	Message string `json:"message"`
}

type Namespace struct {
	Namespace string `json:"namespace"`
}

type Namespaces struct {
	Namespaces []string `json:"namespaces"`
}

type Networking struct {
	Gateways   []string     `json:"gateways"`
	Hosts      []string     `json:"hosts"`
	Export     *bool        `json:"export"`
	HTTPRoutes []*HTTPRoute `json:"http_routes"`
}

type NetworkingInput struct {
	Gateways   []string          `json:"gateways"`
	Hosts      []string          `json:"hosts"`
	Export     *bool             `json:"export"`
	HTTPRoutes []*HTTPRouteInput `json:"http_routes"`
}

type Ref struct {
	Name      string `json:"name"`
	Namespace string `json:"namespace"`
}

type Replica struct {
	Phase     string `json:"phase"`
	Condition string `json:"condition"`
	Reason    string `json:"reason"`
}

type Task struct {
	Name        string                 `json:"name"`
	Namespace   string                 `json:"namespace"`
	Image       string                 `json:"image"`
	Args        []string               `json:"args"`
	Env         map[string]interface{} `json:"env"`
	Schedule    string                 `json:"schedule"`
	Completions *int                   `json:"completions"`
	Labels      map[string]interface{} `json:"labels"`
	Selector    map[string]interface{} `json:"selector"`
}

type TaskInput struct {
	Name        string                 `json:"name"`
	Namespace   string                 `json:"namespace"`
	Image       string                 `json:"image"`
	Args        []string               `json:"args"`
	Env         map[string]interface{} `json:"env"`
	Schedule    string                 `json:"schedule"`
	Completions *int                   `json:"completions"`
	Labels      map[string]interface{} `json:"labels"`
	Selector    map[string]interface{} `json:"selector"`
}
