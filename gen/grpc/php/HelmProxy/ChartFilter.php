<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: schema.proto

namespace HelmProxy;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ChartFilter is used for filtering helm chart search results
 *
 * Generated from protobuf message <code>helmProxy.ChartFilter</code>
 */
class ChartFilter extends \Google\Protobuf\Internal\Message
{
    /**
     * term to search for
     *
     * Generated from protobuf field <code>string term = 1 [(.validator.field) = {</code>
     */
    private $term = '';
    /**
     * term is a regex expression
     *
     * Generated from protobuf field <code>bool regex = 2;</code>
     */
    private $regex = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $term
     *           term to search for
     *     @type bool $regex
     *           term is a regex expression
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Schema::initOnce();
        parent::__construct($data);
    }

    /**
     * term to search for
     *
     * Generated from protobuf field <code>string term = 1 [(.validator.field) = {</code>
     * @return string
     */
    public function getTerm()
    {
        return $this->term;
    }

    /**
     * term to search for
     *
     * Generated from protobuf field <code>string term = 1 [(.validator.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setTerm($var)
    {
        GPBUtil::checkString($var, True);
        $this->term = $var;

        return $this;
    }

    /**
     * term is a regex expression
     *
     * Generated from protobuf field <code>bool regex = 2;</code>
     * @return bool
     */
    public function getRegex()
    {
        return $this->regex;
    }

    /**
     * term is a regex expression
     *
     * Generated from protobuf field <code>bool regex = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setRegex($var)
    {
        GPBUtil::checkBool($var);
        $this->regex = $var;

        return $this;
    }

}

