<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kdeploy.proto

namespace Kdeploy;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * TaskUpdate updates a task(cron job)
 *
 * Generated from protobuf message <code>kdeploy.TaskUpdate</code>
 */
class TaskUpdate extends \Google\Protobuf\Internal\Message
{
    /**
     * name of the application
     *
     * Generated from protobuf field <code>string name = 1 [(.validator.field) = {</code>
     */
    private $name = '';
    /**
     * application namespace
     *
     * Generated from protobuf field <code>string namespace = 2 [(.validator.field) = {</code>
     */
    private $namespace = '';
    /**
     * docker image of application
     *
     * Generated from protobuf field <code>string image = 3;</code>
     */
    private $image = '';
    /**
     * args are arguments given to docker image at startup
     *
     * Generated from protobuf field <code>repeated string args = 5;</code>
     */
    private $args;
    /**
     * k/v map of environmental variables
     *
     * Generated from protobuf field <code>map<string, string> env = 6;</code>
     */
    private $env;
    /**
     * schedule is the cron schedule: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
     *
     * Generated from protobuf field <code>string schedule = 7;</code>
     */
    private $schedule = '';
    /**
     * completions is the number of times to execute the task. If completions = 0, the task will run forever
     *
     * Generated from protobuf field <code>uint32 completions = 8;</code>
     */
    private $completions = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           name of the application
     *     @type string $namespace
     *           application namespace
     *     @type string $image
     *           docker image of application
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $args
     *           args are arguments given to docker image at startup
     *     @type array|\Google\Protobuf\Internal\MapField $env
     *           k/v map of environmental variables
     *     @type string $schedule
     *           schedule is the cron schedule: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
     *     @type int $completions
     *           completions is the number of times to execute the task. If completions = 0, the task will run forever
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Kdeploy::initOnce();
        parent::__construct($data);
    }

    /**
     * name of the application
     *
     * Generated from protobuf field <code>string name = 1 [(.validator.field) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * name of the application
     *
     * Generated from protobuf field <code>string name = 1 [(.validator.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * application namespace
     *
     * Generated from protobuf field <code>string namespace = 2 [(.validator.field) = {</code>
     * @return string
     */
    public function getNamespace()
    {
        return $this->namespace;
    }

    /**
     * application namespace
     *
     * Generated from protobuf field <code>string namespace = 2 [(.validator.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setNamespace($var)
    {
        GPBUtil::checkString($var, True);
        $this->namespace = $var;

        return $this;
    }

    /**
     * docker image of application
     *
     * Generated from protobuf field <code>string image = 3;</code>
     * @return string
     */
    public function getImage()
    {
        return $this->image;
    }

    /**
     * docker image of application
     *
     * Generated from protobuf field <code>string image = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setImage($var)
    {
        GPBUtil::checkString($var, True);
        $this->image = $var;

        return $this;
    }

    /**
     * args are arguments given to docker image at startup
     *
     * Generated from protobuf field <code>repeated string args = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getArgs()
    {
        return $this->args;
    }

    /**
     * args are arguments given to docker image at startup
     *
     * Generated from protobuf field <code>repeated string args = 5;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setArgs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->args = $arr;

        return $this;
    }

    /**
     * k/v map of environmental variables
     *
     * Generated from protobuf field <code>map<string, string> env = 6;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getEnv()
    {
        return $this->env;
    }

    /**
     * k/v map of environmental variables
     *
     * Generated from protobuf field <code>map<string, string> env = 6;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setEnv($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->env = $arr;

        return $this;
    }

    /**
     * schedule is the cron schedule: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
     *
     * Generated from protobuf field <code>string schedule = 7;</code>
     * @return string
     */
    public function getSchedule()
    {
        return $this->schedule;
    }

    /**
     * schedule is the cron schedule: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
     *
     * Generated from protobuf field <code>string schedule = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setSchedule($var)
    {
        GPBUtil::checkString($var, True);
        $this->schedule = $var;

        return $this;
    }

    /**
     * completions is the number of times to execute the task. If completions = 0, the task will run forever
     *
     * Generated from protobuf field <code>uint32 completions = 8;</code>
     * @return int
     */
    public function getCompletions()
    {
        return $this->completions;
    }

    /**
     * completions is the number of times to execute the task. If completions = 0, the task will run forever
     *
     * Generated from protobuf field <code>uint32 completions = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setCompletions($var)
    {
        GPBUtil::checkUint32($var);
        $this->completions = $var;

        return $this;
    }

}

