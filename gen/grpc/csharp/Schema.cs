// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: schema.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Meshpaas {

  /// <summary>Holder for reflection information generated from schema.proto</summary>
  public static partial class SchemaReflection {

    #region Descriptor
    /// <summary>File descriptor for schema.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SchemaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzY2hlbWEucHJvdG8SCG1lc2hwYWFzGhxnb29nbGUvcHJvdG9idWYvc3Ry",
            "dWN0LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhln",
            "b29nbGUvcHJvdG9idWYvYW55LnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1w",
            "dHkucHJvdG8aNmdpdGh1Yi5jb20vbXdpdGtvdy9nby1wcm90by12YWxpZGF0",
            "b3JzL3ZhbGlkYXRvci5wcm90byKTAQoJQXV0aG5SdWxlEiIKCGp3a3NfdXJp",
            "GAEgASgJQhDi3x8MCgpeLnsxLDIyNX0kEiAKBmlzc3VlchgCIAEoCUIQ4t8f",
            "DAoKXi57MSwyMjV9JBIQCghhdWRpZW5jZRgDIAMoCRIuChRvdXB1dF9wYXls",
            "b2FkX2hlYWRlchgEIAEoCUIQ4t8fDAoKXi57MSwyMjV9JCIrCgVBdXRobhIi",
            "CgVydWxlcxgBIAMoCzITLm1lc2hwYWFzLkF1dGhuUnVsZSLrAQoLU2VjcmV0",
            "SW5wdXQSHgoEbmFtZRgBIAEoCUIQ4t8fDAoKXi57MSwyMjV9JBIhCgdwcm9q",
            "ZWN0GAIgASgJQhDi3x8MCgpeLnsxLDIyNX0kEiIKBHR5cGUYAyABKA4yFC5t",
            "ZXNocGFhcy5TZWNyZXRUeXBlEhEKCWltbXV0YWJsZRgEIAEoCBI1CgRkYXRh",
            "GAUgAygLMh8ubWVzaHBhYXMuU2VjcmV0SW5wdXQuRGF0YUVudHJ5Qgbi3x8C",
            "IAEaKwoJRGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToC",
            "OAEi4QEKBlNlY3JldBIeCgRuYW1lGAEgASgJQhDi3x8MCgpeLnsxLDIyNX0k",
            "EiEKB3Byb2plY3QYAiABKAlCEOLfHwwKCl4uezEsMjI1fSQSIgoEdHlwZRgD",
            "IAEoDjIULm1lc2hwYWFzLlNlY3JldFR5cGUSEQoJaW1tdXRhYmxlGAQgASgI",
            "EjAKBGRhdGEYBSADKAsyGi5tZXNocGFhcy5TZWNyZXQuRGF0YUVudHJ5Qgbi",
            "3x8CIAEaKwoJRGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "CToCOAEi2QEKEVNlcnZlclRMU1NldHRpbmdzEhYKDmh0dHBzX3JlZGlyZWN0",
            "GAEgASgIEh8KBG1vZGUYAiABKA4yES5tZXNocGFhcy5UTFNtb2RlEhcKD2Ny",
            "ZWRlbnRpYWxfbmFtZRgDIAEoCRIZChFzdWJqZWN0X2FsdF9uYW1lcxgEIAMo",
            "CRIfChd2ZXJpZnlfY2VydGlmaWNhdGVfc3BraRgFIAMoCRIfChd2ZXJpZnlf",
            "Y2VydGlmaWNhdGVfaGFzaBgGIAMoCRIVCg1jaXBoZXJfc3VpdGVzGAcgAygJ",
            "Ir0BCg9HYXRld2F5TGlzdGVuZXISFAoEcG9ydBgBIAEoDUIG4t8fAhAAEh4K",
            "BG5hbWUYAiABKAlCEOLfHwwKCl4uezEsMjI1fSQSLAoIcHJvdG9jb2wYAyAB",
            "KA4yEi5tZXNocGFhcy5Qcm90b2NvbEIG4t8fAhAAEhUKBWhvc3RzGAQgAygJ",
            "Qgbi3x8CYAASLwoKdGxzX2NvbmZpZxgFIAEoCzIbLm1lc2hwYWFzLlNlcnZl",
            "clRMU1NldHRpbmdzIlYKB0dhdGV3YXkSDAoEbmFtZRgBIAEoCRIPCgdwcm9q",
            "ZWN0GAIgASgJEiwKCWxpc3RlbmVycxgDIAMoCzIZLm1lc2hwYWFzLkdhdGV3",
            "YXlMaXN0ZW5lciJ/CgxHYXRld2F5SW5wdXQSHgoEbmFtZRgBIAEoCUIQ4t8f",
            "DAoKXi57MSwyMjV9JBIhCgdwcm9qZWN0GAIgASgJQhDi3x8MCgpeLnsxLDIy",
            "NX0kEiwKCWxpc3RlbmVycxgDIAMoCzIZLm1lc2hwYWFzLkdhdGV3YXlMaXN0",
            "ZW5lciLjAQoJSFRUUFJvdXRlEh4KBG5hbWUYASABKAlCEOLfHwwKCl4uezEs",
            "MjI1fSQSFAoEcG9ydBgCIAEoDUIG4t8fAhAAEhMKC3BhdGhfcHJlZml4GAMg",
            "ASgJEhMKC3Jld3JpdGVfdXJpGAUgASgJEhUKDWFsbG93X29yaWdpbnMYBiAD",
            "KAkSFQoNYWxsb3dfbWV0aG9kcxgHIAMoCRIVCg1hbGxvd19oZWFkZXJzGAgg",
            "AygJEhYKDmV4cG9zZV9oZWFkZXJzGAkgAygJEhkKEWFsbG93X2NyZWRlbnRp",
            "YWxzGAogASgIImcKCk5ldHdvcmtpbmcSEAoIZ2F0ZXdheXMYASADKAkSDQoF",
            "aG9zdHMYAiADKAkSDgoGZXhwb3J0GAMgASgIEigKC2h0dHBfcm91dGVzGAQg",
            "AygLMhMubWVzaHBhYXMuSFRUUFJvdXRlIpYCCglDb250YWluZXISHgoEbmFt",
            "ZRgBIAEoCUIQ4t8fDAoKXi57MSwyMjV9JBIfCgVpbWFnZRgCIAEoCUIQ4t8f",
            "DAoKXi57MSwyMjV9JBIMCgRhcmdzGAMgAygJEikKA2VudhgEIAMoCzIcLm1l",
            "c2hwYWFzLkNvbnRhaW5lci5FbnZFbnRyeRI1CgVwb3J0cxgFIAMoCzIeLm1l",
            "c2hwYWFzLkNvbnRhaW5lci5Qb3J0c0VudHJ5Qgbi3x8CIAEaKgoIRW52RW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARosCgpQb3J0c0Vu",
            "dHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoDToCOAEimwIKA0FwcBIe",
            "CgRuYW1lGAEgASgJQhDi3x8MCgpeLnsxLDIyNX0kEiEKB3Byb2plY3QYAiAB",
            "KAlCEOLfHwwKCl4uezEsMjI1fSQSLwoKY29udGFpbmVycxgDIAMoCzITLm1l",
            "c2hwYWFzLkNvbnRhaW5lckIG4t8fAiABEhAKCHJlcGxpY2FzGAggASgNEjAK",
            "Cm5ldHdvcmtpbmcYCyABKAsyFC5tZXNocGFhcy5OZXR3b3JraW5nQgbi3x8C",
            "IAESLwoOYXV0aGVudGljYXRpb24YDCABKAsyDy5tZXNocGFhcy5BdXRobkIG",
            "4t8fAiABEisKBnN0YXR1cxgUIAEoCzITLm1lc2hwYWFzLkFwcFN0YXR1c0IG",
            "4t8fAiABIrMBCgRUYXNrEh4KBG5hbWUYASABKAlCEOLfHwwKCl4uezEsMjI1",
            "fSQSIQoHcHJvamVjdBgCIAEoCUIQ4t8fDAoKXi57MSwyMjV9JBIvCgpjb250",
            "YWluZXJzGAMgAygLMhMubWVzaHBhYXMuQ29udGFpbmVyQgbi3x8CIAESIgoI",
            "c2NoZWR1bGUYByABKAlCEOLfHwwKCl4uezEsMjI1fSQSEwoLY29tcGxldGlv",
            "bnMYCCABKA0iuAEKCVRhc2tJbnB1dBIeCgRuYW1lGAEgASgJQhDi3x8MCgpe",
            "LnsxLDIyNX0kEiEKB3Byb2plY3QYAiABKAlCEOLfHwwKCl4uezEsMjI1fSQS",
            "LwoKY29udGFpbmVycxgDIAMoCzITLm1lc2hwYWFzLkNvbnRhaW5lckIG4t8f",
            "AiABEiIKCHNjaGVkdWxlGAcgASgJQhDi3x8MCgpeLnsxLDIyNX0kEhMKC2Nv",
            "bXBsZXRpb25zGAggASgNIusBCghBcHBJbnB1dBIeCgRuYW1lGAEgASgJQhDi",
            "3x8MCgpeLnsxLDIyNX0kEiEKB3Byb2plY3QYAiABKAlCEOLfHwwKCl4uezEs",
            "MjI1fSQSLwoKY29udGFpbmVycxgDIAMoCzITLm1lc2hwYWFzLkNvbnRhaW5l",
            "ckIG4t8fAiABEhAKCHJlcGxpY2FzGAcgASgNEjAKCm5ldHdvcmtpbmcYCiAB",
            "KAsyFC5tZXNocGFhcy5OZXR3b3JraW5nQgbi3x8CIAESJwoOYXV0aGVudGlj",
            "YXRpb24YDCABKAsyDy5tZXNocGFhcy5BdXRobiJICgNSZWYSHgoEbmFtZRgB",
            "IAEoCUIQ4t8fDAoKXi57MSwyMjV9JBIhCgdwcm9qZWN0GAIgASgJQhDi3x8M",
            "CgpeLnsxLDIyNX0kIjsKB1JlcGxpY2ESDQoFcGhhc2UYASABKAkSEQoJY29u",
            "ZGl0aW9uGAIgASgJEg4KBnJlYXNvbhgDIAEoCSIwCglBcHBTdGF0dXMSIwoI",
            "cmVwbGljYXMYASADKAsyES5tZXNocGFhcy5SZXBsaWNhIhYKA0xvZxIPCgdt",
            "ZXNzYWdlGAEgASgJIisKBEFwcHMSIwoMYXBwbGljYXRpb25zGAEgAygLMg0u",
            "bWVzaHBhYXMuQXBwIiYKBVRhc2tzEh0KBXRhc2tzGAEgAygLMg4ubWVzaHBh",
            "YXMuVGFzayIuCgxQcm9qZWN0SW5wdXQSHgoEbmFtZRgBIAEoCUIQ4t8fDAoK",
            "Xi57MSwyMjV9JCIXCgdQcm9qZWN0EgwKBG5hbWUYASABKAkiLAoKUHJvamVj",
            "dFJlZhIeCgRuYW1lGAEgASgJQhDi3x8MCgpeLnsxLDIyNX0kIhwKCFByb2pl",
            "Y3RzEhAKCHByb2plY3RzGAEgAygJKj0KClNlY3JldFR5cGUSCgoGT1BBUVVF",
            "EAASEAoMVExTX0NFUlRfS0VZEAESEQoNRE9DS0VSX0NPTkZJRxACKmcKCFBy",
            "b3RvY29sEhQKEElOVkFMSURfUFJPVE9DT0wQABIICgRIVFRQEAESCQoFSFRU",
            "UFMQAhIICgRHUlBDEAMSCQoFSFRUUDIQBBIJCgVNT05HTxAFEgcKA1RDUBAG",
            "EgcKA1RMUxAHKloKB1RMU21vZGUSDwoLUEFTU1RIUk9VR0gQABIKCgZTSU1Q",
            "TEUQARIKCgZNVVRVQUwQAhIUChBBVVRPX1BBU1NUSFJPVUdIEAMSEAoMSVNU",
            "SU9fTVVUVUFMEAQytwoKD01lc2hQYWFzU2VydmljZRI8Cg1DcmVhdGVQcm9q",
            "ZWN0EhYubWVzaHBhYXMuUHJvamVjdElucHV0GhEubWVzaHBhYXMuUHJvamVj",
            "dCIAEjwKDExpc3RQcm9qZWN0cxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoS",
            "Lm1lc2hwYWFzLlByb2plY3RzIgASPwoNRGVsZXRlUHJvamVjdBIULm1lc2hw",
            "YWFzLlByb2plY3RSZWYaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABI3CgpH",
            "ZXRQcm9qZWN0EhQubWVzaHBhYXMuUHJvamVjdFJlZhoRLm1lc2hwYWFzLlBy",
            "b2plY3QiABI8Cg1VcGRhdGVQcm9qZWN0EhYubWVzaHBhYXMuUHJvamVjdElu",
            "cHV0GhEubWVzaHBhYXMuUHJvamVjdCIAEjAKCUNyZWF0ZUFwcBISLm1lc2hw",
            "YWFzLkFwcElucHV0Gg0ubWVzaHBhYXMuQXBwIgASMAoJVXBkYXRlQXBwEhIu",
            "bWVzaHBhYXMuQXBwSW5wdXQaDS5tZXNocGFhcy5BcHAiABI0CglEZWxldGVB",
            "cHASDS5tZXNocGFhcy5SZWYaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABIo",
            "CgZHZXRBcHASDS5tZXNocGFhcy5SZWYaDS5tZXNocGFhcy5BcHAiABIyCghM",
            "aXN0QXBwcxIULm1lc2hwYWFzLlByb2plY3RSZWYaDi5tZXNocGFhcy5BcHBz",
            "IgASMwoKQ3JlYXRlVGFzaxITLm1lc2hwYWFzLlRhc2tJbnB1dBoOLm1lc2hw",
            "YWFzLlRhc2siABIzCgpVcGRhdGVUYXNrEhMubWVzaHBhYXMuVGFza0lucHV0",
            "Gg4ubWVzaHBhYXMuVGFzayIAEjUKCkRlbGV0ZVRhc2sSDS5tZXNocGFhcy5S",
            "ZWYaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABIqCgdHZXRUYXNrEg0ubWVz",
            "aHBhYXMuUmVmGg4ubWVzaHBhYXMuVGFzayIAEjQKCUxpc3RUYXNrcxIULm1l",
            "c2hwYWFzLlByb2plY3RSZWYaDy5tZXNocGFhcy5UYXNrcyIAEjwKDUNyZWF0",
            "ZUdhdGV3YXkSFi5tZXNocGFhcy5HYXRld2F5SW5wdXQaES5tZXNocGFhcy5H",
            "YXRld2F5IgASPAoNVXBkYXRlR2F0ZXdheRIWLm1lc2hwYWFzLkdhdGV3YXlJ",
            "bnB1dBoRLm1lc2hwYWFzLkdhdGV3YXkiABI4Cg1EZWxldGVHYXRld2F5Eg0u",
            "bWVzaHBhYXMuUmVmGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASMAoKR2V0",
            "R2F0ZXdheRINLm1lc2hwYWFzLlJlZhoRLm1lc2hwYWFzLkdhdGV3YXkiABI5",
            "CgxDcmVhdGVTZWNyZXQSFS5tZXNocGFhcy5TZWNyZXRJbnB1dBoQLm1lc2hw",
            "YWFzLlNlY3JldCIAEjkKDFVwZGF0ZVNlY3JldBIVLm1lc2hwYWFzLlNlY3Jl",
            "dElucHV0GhAubWVzaHBhYXMuU2VjcmV0IgASNwoMRGVsZXRlU2VjcmV0Eg0u",
            "bWVzaHBhYXMuUmVmGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASLgoJR2V0",
            "U2VjcmV0Eg0ubWVzaHBhYXMuUmVmGhAubWVzaHBhYXMuU2VjcmV0IgASLgoK",
            "U3RyZWFtTG9ncxINLm1lc2hwYWFzLlJlZhoNLm1lc2hwYWFzLkxvZyIAMAFC",
            "DFoKbWVzaHBhYXNwYmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Validator.ValidatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Meshpaas.SecretType), typeof(global::Meshpaas.Protocol), typeof(global::Meshpaas.TLSmode), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.AuthnRule), global::Meshpaas.AuthnRule.Parser, new[]{ "JwksUri", "Issuer", "Audience", "OuputPayloadHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Authn), global::Meshpaas.Authn.Parser, new[]{ "Rules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.SecretInput), global::Meshpaas.SecretInput.Parser, new[]{ "Name", "Project", "Type", "Immutable", "Data" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Secret), global::Meshpaas.Secret.Parser, new[]{ "Name", "Project", "Type", "Immutable", "Data" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.ServerTLSSettings), global::Meshpaas.ServerTLSSettings.Parser, new[]{ "HttpsRedirect", "Mode", "CredentialName", "SubjectAltNames", "VerifyCertificateSpki", "VerifyCertificateHash", "CipherSuites" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.GatewayListener), global::Meshpaas.GatewayListener.Parser, new[]{ "Port", "Name", "Protocol", "Hosts", "TlsConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Gateway), global::Meshpaas.Gateway.Parser, new[]{ "Name", "Project", "Listeners" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.GatewayInput), global::Meshpaas.GatewayInput.Parser, new[]{ "Name", "Project", "Listeners" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.HTTPRoute), global::Meshpaas.HTTPRoute.Parser, new[]{ "Name", "Port", "PathPrefix", "RewriteUri", "AllowOrigins", "AllowMethods", "AllowHeaders", "ExposeHeaders", "AllowCredentials" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Networking), global::Meshpaas.Networking.Parser, new[]{ "Gateways", "Hosts", "Export", "HttpRoutes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Container), global::Meshpaas.Container.Parser, new[]{ "Name", "Image", "Args", "Env", "Ports" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.App), global::Meshpaas.App.Parser, new[]{ "Name", "Project", "Containers", "Replicas", "Networking", "Authentication", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Task), global::Meshpaas.Task.Parser, new[]{ "Name", "Project", "Containers", "Schedule", "Completions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.TaskInput), global::Meshpaas.TaskInput.Parser, new[]{ "Name", "Project", "Containers", "Schedule", "Completions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.AppInput), global::Meshpaas.AppInput.Parser, new[]{ "Name", "Project", "Containers", "Replicas", "Networking", "Authentication" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Ref), global::Meshpaas.Ref.Parser, new[]{ "Name", "Project" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Replica), global::Meshpaas.Replica.Parser, new[]{ "Phase", "Condition", "Reason" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.AppStatus), global::Meshpaas.AppStatus.Parser, new[]{ "Replicas" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Log), global::Meshpaas.Log.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Apps), global::Meshpaas.Apps.Parser, new[]{ "Applications" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Tasks), global::Meshpaas.Tasks.Parser, new[]{ "Tasks_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.ProjectInput), global::Meshpaas.ProjectInput.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Project), global::Meshpaas.Project.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.ProjectRef), global::Meshpaas.ProjectRef.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshpaas.Projects), global::Meshpaas.Projects.Parser, new[]{ "Projects_" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum SecretType {
    [pbr::OriginalName("OPAQUE")] Opaque = 0,
    [pbr::OriginalName("TLS_CERT_KEY")] TlsCertKey = 1,
    [pbr::OriginalName("DOCKER_CONFIG")] DockerConfig = 2,
  }

  public enum Protocol {
    [pbr::OriginalName("INVALID_PROTOCOL")] InvalidProtocol = 0,
    [pbr::OriginalName("HTTP")] Http = 1,
    [pbr::OriginalName("HTTPS")] Https = 2,
    [pbr::OriginalName("GRPC")] Grpc = 3,
    [pbr::OriginalName("HTTP2")] Http2 = 4,
    [pbr::OriginalName("MONGO")] Mongo = 5,
    [pbr::OriginalName("TCP")] Tcp = 6,
    [pbr::OriginalName("TLS")] Tls = 7,
  }

  public enum TLSmode {
    [pbr::OriginalName("PASSTHROUGH")] Passthrough = 0,
    [pbr::OriginalName("SIMPLE")] Simple = 1,
    [pbr::OriginalName("MUTUAL")] Mutual = 2,
    [pbr::OriginalName("AUTO_PASSTHROUGH")] AutoPassthrough = 3,
    [pbr::OriginalName("ISTIO_MUTUAL")] IstioMutual = 4,
  }

  #endregion

  #region Messages
  public sealed partial class AuthnRule : pb::IMessage<AuthnRule> {
    private static readonly pb::MessageParser<AuthnRule> _parser = new pb::MessageParser<AuthnRule>(() => new AuthnRule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthnRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthnRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthnRule(AuthnRule other) : this() {
      jwksUri_ = other.jwksUri_;
      issuer_ = other.issuer_;
      audience_ = other.audience_.Clone();
      ouputPayloadHeader_ = other.ouputPayloadHeader_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthnRule Clone() {
      return new AuthnRule(this);
    }

    /// <summary>Field number for the "jwks_uri" field.</summary>
    public const int JwksUriFieldNumber = 1;
    private string jwksUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JwksUri {
      get { return jwksUri_; }
      set {
        jwksUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "issuer" field.</summary>
    public const int IssuerFieldNumber = 2;
    private string issuer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Issuer {
      get { return issuer_; }
      set {
        issuer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "audience" field.</summary>
    public const int AudienceFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_audience_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> audience_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Audience {
      get { return audience_; }
    }

    /// <summary>Field number for the "ouput_payload_header" field.</summary>
    public const int OuputPayloadHeaderFieldNumber = 4;
    private string ouputPayloadHeader_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OuputPayloadHeader {
      get { return ouputPayloadHeader_; }
      set {
        ouputPayloadHeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthnRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthnRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JwksUri != other.JwksUri) return false;
      if (Issuer != other.Issuer) return false;
      if(!audience_.Equals(other.audience_)) return false;
      if (OuputPayloadHeader != other.OuputPayloadHeader) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JwksUri.Length != 0) hash ^= JwksUri.GetHashCode();
      if (Issuer.Length != 0) hash ^= Issuer.GetHashCode();
      hash ^= audience_.GetHashCode();
      if (OuputPayloadHeader.Length != 0) hash ^= OuputPayloadHeader.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JwksUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JwksUri);
      }
      if (Issuer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Issuer);
      }
      audience_.WriteTo(output, _repeated_audience_codec);
      if (OuputPayloadHeader.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OuputPayloadHeader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JwksUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JwksUri);
      }
      if (Issuer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Issuer);
      }
      size += audience_.CalculateSize(_repeated_audience_codec);
      if (OuputPayloadHeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OuputPayloadHeader);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthnRule other) {
      if (other == null) {
        return;
      }
      if (other.JwksUri.Length != 0) {
        JwksUri = other.JwksUri;
      }
      if (other.Issuer.Length != 0) {
        Issuer = other.Issuer;
      }
      audience_.Add(other.audience_);
      if (other.OuputPayloadHeader.Length != 0) {
        OuputPayloadHeader = other.OuputPayloadHeader;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JwksUri = input.ReadString();
            break;
          }
          case 18: {
            Issuer = input.ReadString();
            break;
          }
          case 26: {
            audience_.AddEntriesFrom(input, _repeated_audience_codec);
            break;
          }
          case 34: {
            OuputPayloadHeader = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Authn : pb::IMessage<Authn> {
    private static readonly pb::MessageParser<Authn> _parser = new pb::MessageParser<Authn>(() => new Authn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Authn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authn(Authn other) : this() {
      rules_ = other.rules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authn Clone() {
      return new Authn(this);
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Meshpaas.AuthnRule> _repeated_rules_codec
        = pb::FieldCodec.ForMessage(10, global::Meshpaas.AuthnRule.Parser);
    private readonly pbc::RepeatedField<global::Meshpaas.AuthnRule> rules_ = new pbc::RepeatedField<global::Meshpaas.AuthnRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Meshpaas.AuthnRule> Rules {
      get { return rules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Authn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Authn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rules_.Equals(other.rules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rules_.WriteTo(output, _repeated_rules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rules_.CalculateSize(_repeated_rules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Authn other) {
      if (other == null) {
        return;
      }
      rules_.Add(other.rules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SecretInput : pb::IMessage<SecretInput> {
    private static readonly pb::MessageParser<SecretInput> _parser = new pb::MessageParser<SecretInput>(() => new SecretInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SecretInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecretInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecretInput(SecretInput other) : this() {
      name_ = other.name_;
      project_ = other.project_;
      type_ = other.type_;
      immutable_ = other.immutable_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecretInput Clone() {
      return new SecretInput(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the secret
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 2;
    private string project_ = "";
    /// <summary>
    /// secret project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Meshpaas.SecretType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Meshpaas.SecretType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "immutable" field.</summary>
    public const int ImmutableFieldNumber = 4;
    private bool immutable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Immutable {
      get { return immutable_; }
      set {
        immutable_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_data_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 42);
    private readonly pbc::MapField<string, string> data_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SecretInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SecretInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Project != other.Project) return false;
      if (Type != other.Type) return false;
      if (Immutable != other.Immutable) return false;
      if (!Data.Equals(other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Immutable != false) hash ^= Immutable.GetHashCode();
      hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Immutable != false) {
        output.WriteRawTag(32);
        output.WriteBool(Immutable);
      }
      data_.WriteTo(output, _map_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Immutable != false) {
        size += 1 + 1;
      }
      size += data_.CalculateSize(_map_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SecretInput other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Immutable != false) {
        Immutable = other.Immutable;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
          case 24: {
            type_ = (global::Meshpaas.SecretType) input.ReadEnum();
            break;
          }
          case 32: {
            Immutable = input.ReadBool();
            break;
          }
          case 42: {
            data_.AddEntriesFrom(input, _map_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Secret : pb::IMessage<Secret> {
    private static readonly pb::MessageParser<Secret> _parser = new pb::MessageParser<Secret>(() => new Secret());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Secret> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret(Secret other) : this() {
      name_ = other.name_;
      project_ = other.project_;
      type_ = other.type_;
      immutable_ = other.immutable_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret Clone() {
      return new Secret(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the secret
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 2;
    private string project_ = "";
    /// <summary>
    /// secret project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Meshpaas.SecretType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Meshpaas.SecretType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "immutable" field.</summary>
    public const int ImmutableFieldNumber = 4;
    private bool immutable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Immutable {
      get { return immutable_; }
      set {
        immutable_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_data_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 42);
    private readonly pbc::MapField<string, string> data_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Secret);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Secret other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Project != other.Project) return false;
      if (Type != other.Type) return false;
      if (Immutable != other.Immutable) return false;
      if (!Data.Equals(other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Immutable != false) hash ^= Immutable.GetHashCode();
      hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Immutable != false) {
        output.WriteRawTag(32);
        output.WriteBool(Immutable);
      }
      data_.WriteTo(output, _map_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Immutable != false) {
        size += 1 + 1;
      }
      size += data_.CalculateSize(_map_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Secret other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Immutable != false) {
        Immutable = other.Immutable;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
          case 24: {
            type_ = (global::Meshpaas.SecretType) input.ReadEnum();
            break;
          }
          case 32: {
            Immutable = input.ReadBool();
            break;
          }
          case 42: {
            data_.AddEntriesFrom(input, _map_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerTLSSettings : pb::IMessage<ServerTLSSettings> {
    private static readonly pb::MessageParser<ServerTLSSettings> _parser = new pb::MessageParser<ServerTLSSettings>(() => new ServerTLSSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerTLSSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerTLSSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerTLSSettings(ServerTLSSettings other) : this() {
      httpsRedirect_ = other.httpsRedirect_;
      mode_ = other.mode_;
      credentialName_ = other.credentialName_;
      subjectAltNames_ = other.subjectAltNames_.Clone();
      verifyCertificateSpki_ = other.verifyCertificateSpki_.Clone();
      verifyCertificateHash_ = other.verifyCertificateHash_.Clone();
      cipherSuites_ = other.cipherSuites_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerTLSSettings Clone() {
      return new ServerTLSSettings(this);
    }

    /// <summary>Field number for the "https_redirect" field.</summary>
    public const int HttpsRedirectFieldNumber = 1;
    private bool httpsRedirect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HttpsRedirect {
      get { return httpsRedirect_; }
      set {
        httpsRedirect_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private global::Meshpaas.TLSmode mode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Meshpaas.TLSmode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "credential_name" field.</summary>
    public const int CredentialNameFieldNumber = 3;
    private string credentialName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CredentialName {
      get { return credentialName_; }
      set {
        credentialName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject_alt_names" field.</summary>
    public const int SubjectAltNamesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_subjectAltNames_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> subjectAltNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SubjectAltNames {
      get { return subjectAltNames_; }
    }

    /// <summary>Field number for the "verify_certificate_spki" field.</summary>
    public const int VerifyCertificateSpkiFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_verifyCertificateSpki_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> verifyCertificateSpki_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> VerifyCertificateSpki {
      get { return verifyCertificateSpki_; }
    }

    /// <summary>Field number for the "verify_certificate_hash" field.</summary>
    public const int VerifyCertificateHashFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_verifyCertificateHash_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> verifyCertificateHash_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> VerifyCertificateHash {
      get { return verifyCertificateHash_; }
    }

    /// <summary>Field number for the "cipher_suites" field.</summary>
    public const int CipherSuitesFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_cipherSuites_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> cipherSuites_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CipherSuites {
      get { return cipherSuites_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerTLSSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerTLSSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HttpsRedirect != other.HttpsRedirect) return false;
      if (Mode != other.Mode) return false;
      if (CredentialName != other.CredentialName) return false;
      if(!subjectAltNames_.Equals(other.subjectAltNames_)) return false;
      if(!verifyCertificateSpki_.Equals(other.verifyCertificateSpki_)) return false;
      if(!verifyCertificateHash_.Equals(other.verifyCertificateHash_)) return false;
      if(!cipherSuites_.Equals(other.cipherSuites_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HttpsRedirect != false) hash ^= HttpsRedirect.GetHashCode();
      if (Mode != 0) hash ^= Mode.GetHashCode();
      if (CredentialName.Length != 0) hash ^= CredentialName.GetHashCode();
      hash ^= subjectAltNames_.GetHashCode();
      hash ^= verifyCertificateSpki_.GetHashCode();
      hash ^= verifyCertificateHash_.GetHashCode();
      hash ^= cipherSuites_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HttpsRedirect != false) {
        output.WriteRawTag(8);
        output.WriteBool(HttpsRedirect);
      }
      if (Mode != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Mode);
      }
      if (CredentialName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CredentialName);
      }
      subjectAltNames_.WriteTo(output, _repeated_subjectAltNames_codec);
      verifyCertificateSpki_.WriteTo(output, _repeated_verifyCertificateSpki_codec);
      verifyCertificateHash_.WriteTo(output, _repeated_verifyCertificateHash_codec);
      cipherSuites_.WriteTo(output, _repeated_cipherSuites_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HttpsRedirect != false) {
        size += 1 + 1;
      }
      if (Mode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (CredentialName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CredentialName);
      }
      size += subjectAltNames_.CalculateSize(_repeated_subjectAltNames_codec);
      size += verifyCertificateSpki_.CalculateSize(_repeated_verifyCertificateSpki_codec);
      size += verifyCertificateHash_.CalculateSize(_repeated_verifyCertificateHash_codec);
      size += cipherSuites_.CalculateSize(_repeated_cipherSuites_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerTLSSettings other) {
      if (other == null) {
        return;
      }
      if (other.HttpsRedirect != false) {
        HttpsRedirect = other.HttpsRedirect;
      }
      if (other.Mode != 0) {
        Mode = other.Mode;
      }
      if (other.CredentialName.Length != 0) {
        CredentialName = other.CredentialName;
      }
      subjectAltNames_.Add(other.subjectAltNames_);
      verifyCertificateSpki_.Add(other.verifyCertificateSpki_);
      verifyCertificateHash_.Add(other.verifyCertificateHash_);
      cipherSuites_.Add(other.cipherSuites_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HttpsRedirect = input.ReadBool();
            break;
          }
          case 16: {
            mode_ = (global::Meshpaas.TLSmode) input.ReadEnum();
            break;
          }
          case 26: {
            CredentialName = input.ReadString();
            break;
          }
          case 34: {
            subjectAltNames_.AddEntriesFrom(input, _repeated_subjectAltNames_codec);
            break;
          }
          case 42: {
            verifyCertificateSpki_.AddEntriesFrom(input, _repeated_verifyCertificateSpki_codec);
            break;
          }
          case 50: {
            verifyCertificateHash_.AddEntriesFrom(input, _repeated_verifyCertificateHash_codec);
            break;
          }
          case 58: {
            cipherSuites_.AddEntriesFrom(input, _repeated_cipherSuites_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GatewayListener : pb::IMessage<GatewayListener> {
    private static readonly pb::MessageParser<GatewayListener> _parser = new pb::MessageParser<GatewayListener>(() => new GatewayListener());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GatewayListener> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayListener() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayListener(GatewayListener other) : this() {
      port_ = other.port_;
      name_ = other.name_;
      protocol_ = other.protocol_;
      hosts_ = other.hosts_.Clone();
      tlsConfig_ = other.tlsConfig_ != null ? other.tlsConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayListener Clone() {
      return new GatewayListener(this);
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 1;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 3;
    private global::Meshpaas.Protocol protocol_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Meshpaas.Protocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "hosts" field.</summary>
    public const int HostsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_hosts_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> hosts_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Hosts {
      get { return hosts_; }
    }

    /// <summary>Field number for the "tls_config" field.</summary>
    public const int TlsConfigFieldNumber = 5;
    private global::Meshpaas.ServerTLSSettings tlsConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Meshpaas.ServerTLSSettings TlsConfig {
      get { return tlsConfig_; }
      set {
        tlsConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GatewayListener);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GatewayListener other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Port != other.Port) return false;
      if (Name != other.Name) return false;
      if (Protocol != other.Protocol) return false;
      if(!hosts_.Equals(other.hosts_)) return false;
      if (!object.Equals(TlsConfig, other.TlsConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Protocol != 0) hash ^= Protocol.GetHashCode();
      hash ^= hosts_.GetHashCode();
      if (tlsConfig_ != null) hash ^= TlsConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Port != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Port);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Protocol != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Protocol);
      }
      hosts_.WriteTo(output, _repeated_hosts_codec);
      if (tlsConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TlsConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Protocol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      size += hosts_.CalculateSize(_repeated_hosts_codec);
      if (tlsConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TlsConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GatewayListener other) {
      if (other == null) {
        return;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Protocol != 0) {
        Protocol = other.Protocol;
      }
      hosts_.Add(other.hosts_);
      if (other.tlsConfig_ != null) {
        if (tlsConfig_ == null) {
          tlsConfig_ = new global::Meshpaas.ServerTLSSettings();
        }
        TlsConfig.MergeFrom(other.TlsConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Port = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            protocol_ = (global::Meshpaas.Protocol) input.ReadEnum();
            break;
          }
          case 34: {
            hosts_.AddEntriesFrom(input, _repeated_hosts_codec);
            break;
          }
          case 42: {
            if (tlsConfig_ == null) {
              tlsConfig_ = new global::Meshpaas.ServerTLSSettings();
            }
            input.ReadMessage(tlsConfig_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Gateway : pb::IMessage<Gateway> {
    private static readonly pb::MessageParser<Gateway> _parser = new pb::MessageParser<Gateway>(() => new Gateway());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Gateway> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gateway() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gateway(Gateway other) : this() {
      name_ = other.name_;
      project_ = other.project_;
      listeners_ = other.listeners_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gateway Clone() {
      return new Gateway(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the application
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 2;
    private string project_ = "";
    /// <summary>
    /// application project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "listeners" field.</summary>
    public const int ListenersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Meshpaas.GatewayListener> _repeated_listeners_codec
        = pb::FieldCodec.ForMessage(26, global::Meshpaas.GatewayListener.Parser);
    private readonly pbc::RepeatedField<global::Meshpaas.GatewayListener> listeners_ = new pbc::RepeatedField<global::Meshpaas.GatewayListener>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Meshpaas.GatewayListener> Listeners {
      get { return listeners_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Gateway);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Gateway other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Project != other.Project) return false;
      if(!listeners_.Equals(other.listeners_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      hash ^= listeners_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      listeners_.WriteTo(output, _repeated_listeners_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      size += listeners_.CalculateSize(_repeated_listeners_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Gateway other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      listeners_.Add(other.listeners_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
          case 26: {
            listeners_.AddEntriesFrom(input, _repeated_listeners_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GatewayInput : pb::IMessage<GatewayInput> {
    private static readonly pb::MessageParser<GatewayInput> _parser = new pb::MessageParser<GatewayInput>(() => new GatewayInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GatewayInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayInput(GatewayInput other) : this() {
      name_ = other.name_;
      project_ = other.project_;
      listeners_ = other.listeners_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayInput Clone() {
      return new GatewayInput(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the application
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 2;
    private string project_ = "";
    /// <summary>
    /// application project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "listeners" field.</summary>
    public const int ListenersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Meshpaas.GatewayListener> _repeated_listeners_codec
        = pb::FieldCodec.ForMessage(26, global::Meshpaas.GatewayListener.Parser);
    private readonly pbc::RepeatedField<global::Meshpaas.GatewayListener> listeners_ = new pbc::RepeatedField<global::Meshpaas.GatewayListener>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Meshpaas.GatewayListener> Listeners {
      get { return listeners_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GatewayInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GatewayInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Project != other.Project) return false;
      if(!listeners_.Equals(other.listeners_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      hash ^= listeners_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      listeners_.WriteTo(output, _repeated_listeners_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      size += listeners_.CalculateSize(_repeated_listeners_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GatewayInput other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      listeners_.Add(other.listeners_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
          case 26: {
            listeners_.AddEntriesFrom(input, _repeated_listeners_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// HTTPRoute is a single http route(istio HttpRoute)
  /// </summary>
  public sealed partial class HTTPRoute : pb::IMessage<HTTPRoute> {
    private static readonly pb::MessageParser<HTTPRoute> _parser = new pb::MessageParser<HTTPRoute>(() => new HTTPRoute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HTTPRoute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPRoute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPRoute(HTTPRoute other) : this() {
      name_ = other.name_;
      port_ = other.port_;
      pathPrefix_ = other.pathPrefix_;
      rewriteUri_ = other.rewriteUri_;
      allowOrigins_ = other.allowOrigins_.Clone();
      allowMethods_ = other.allowMethods_.Clone();
      allowHeaders_ = other.allowHeaders_.Clone();
      exposeHeaders_ = other.exposeHeaders_.Clone();
      allowCredentials_ = other.allowCredentials_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPRoute Clone() {
      return new HTTPRoute(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "path_prefix" field.</summary>
    public const int PathPrefixFieldNumber = 3;
    private string pathPrefix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PathPrefix {
      get { return pathPrefix_; }
      set {
        pathPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rewrite_uri" field.</summary>
    public const int RewriteUriFieldNumber = 5;
    private string rewriteUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewriteUri {
      get { return rewriteUri_; }
      set {
        rewriteUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "allow_origins" field.</summary>
    public const int AllowOriginsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_allowOrigins_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> allowOrigins_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of origins that are allowed to perform CORS requests
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllowOrigins {
      get { return allowOrigins_; }
    }

    /// <summary>Field number for the "allow_methods" field.</summary>
    public const int AllowMethodsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_allowMethods_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> allowMethods_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of methods that are allowed to perform CORS requests
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllowMethods {
      get { return allowMethods_; }
    }

    /// <summary>Field number for the "allow_headers" field.</summary>
    public const int AllowHeadersFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_allowHeaders_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> allowHeaders_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of headers that are allowed to perform CORS requests
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllowHeaders {
      get { return allowHeaders_; }
    }

    /// <summary>Field number for the "expose_headers" field.</summary>
    public const int ExposeHeadersFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_exposeHeaders_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> exposeHeaders_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of origins that are allowed to perform CORS requests
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ExposeHeaders {
      get { return exposeHeaders_; }
    }

    /// <summary>Field number for the "allow_credentials" field.</summary>
    public const int AllowCredentialsFieldNumber = 10;
    private bool allowCredentials_;
    /// <summary>
    /// adds `Access-Control-Allow-Credentials` header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowCredentials {
      get { return allowCredentials_; }
      set {
        allowCredentials_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HTTPRoute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HTTPRoute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Port != other.Port) return false;
      if (PathPrefix != other.PathPrefix) return false;
      if (RewriteUri != other.RewriteUri) return false;
      if(!allowOrigins_.Equals(other.allowOrigins_)) return false;
      if(!allowMethods_.Equals(other.allowMethods_)) return false;
      if(!allowHeaders_.Equals(other.allowHeaders_)) return false;
      if(!exposeHeaders_.Equals(other.exposeHeaders_)) return false;
      if (AllowCredentials != other.AllowCredentials) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (PathPrefix.Length != 0) hash ^= PathPrefix.GetHashCode();
      if (RewriteUri.Length != 0) hash ^= RewriteUri.GetHashCode();
      hash ^= allowOrigins_.GetHashCode();
      hash ^= allowMethods_.GetHashCode();
      hash ^= allowHeaders_.GetHashCode();
      hash ^= exposeHeaders_.GetHashCode();
      if (AllowCredentials != false) hash ^= AllowCredentials.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (PathPrefix.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PathPrefix);
      }
      if (RewriteUri.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RewriteUri);
      }
      allowOrigins_.WriteTo(output, _repeated_allowOrigins_codec);
      allowMethods_.WriteTo(output, _repeated_allowMethods_codec);
      allowHeaders_.WriteTo(output, _repeated_allowHeaders_codec);
      exposeHeaders_.WriteTo(output, _repeated_exposeHeaders_codec);
      if (AllowCredentials != false) {
        output.WriteRawTag(80);
        output.WriteBool(AllowCredentials);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (PathPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PathPrefix);
      }
      if (RewriteUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewriteUri);
      }
      size += allowOrigins_.CalculateSize(_repeated_allowOrigins_codec);
      size += allowMethods_.CalculateSize(_repeated_allowMethods_codec);
      size += allowHeaders_.CalculateSize(_repeated_allowHeaders_codec);
      size += exposeHeaders_.CalculateSize(_repeated_exposeHeaders_codec);
      if (AllowCredentials != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HTTPRoute other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.PathPrefix.Length != 0) {
        PathPrefix = other.PathPrefix;
      }
      if (other.RewriteUri.Length != 0) {
        RewriteUri = other.RewriteUri;
      }
      allowOrigins_.Add(other.allowOrigins_);
      allowMethods_.Add(other.allowMethods_);
      allowHeaders_.Add(other.allowHeaders_);
      exposeHeaders_.Add(other.exposeHeaders_);
      if (other.AllowCredentials != false) {
        AllowCredentials = other.AllowCredentials;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
          case 26: {
            PathPrefix = input.ReadString();
            break;
          }
          case 42: {
            RewriteUri = input.ReadString();
            break;
          }
          case 50: {
            allowOrigins_.AddEntriesFrom(input, _repeated_allowOrigins_codec);
            break;
          }
          case 58: {
            allowMethods_.AddEntriesFrom(input, _repeated_allowMethods_codec);
            break;
          }
          case 66: {
            allowHeaders_.AddEntriesFrom(input, _repeated_allowHeaders_codec);
            break;
          }
          case 74: {
            exposeHeaders_.AddEntriesFrom(input, _repeated_exposeHeaders_codec);
            break;
          }
          case 80: {
            AllowCredentials = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Networking : pb::IMessage<Networking> {
    private static readonly pb::MessageParser<Networking> _parser = new pb::MessageParser<Networking>(() => new Networking());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Networking> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Networking() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Networking(Networking other) : this() {
      gateways_ = other.gateways_.Clone();
      hosts_ = other.hosts_.Clone();
      export_ = other.export_;
      httpRoutes_ = other.httpRoutes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Networking Clone() {
      return new Networking(this);
    }

    /// <summary>Field number for the "gateways" field.</summary>
    public const int GatewaysFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_gateways_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> gateways_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Gateways {
      get { return gateways_; }
    }

    /// <summary>Field number for the "hosts" field.</summary>
    public const int HostsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_hosts_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> hosts_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Hosts {
      get { return hosts_; }
    }

    /// <summary>Field number for the "export" field.</summary>
    public const int ExportFieldNumber = 3;
    private bool export_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Export {
      get { return export_; }
      set {
        export_ = value;
      }
    }

    /// <summary>Field number for the "http_routes" field.</summary>
    public const int HttpRoutesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Meshpaas.HTTPRoute> _repeated_httpRoutes_codec
        = pb::FieldCodec.ForMessage(34, global::Meshpaas.HTTPRoute.Parser);
    private readonly pbc::RepeatedField<global::Meshpaas.HTTPRoute> httpRoutes_ = new pbc::RepeatedField<global::Meshpaas.HTTPRoute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Meshpaas.HTTPRoute> HttpRoutes {
      get { return httpRoutes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Networking);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Networking other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gateways_.Equals(other.gateways_)) return false;
      if(!hosts_.Equals(other.hosts_)) return false;
      if (Export != other.Export) return false;
      if(!httpRoutes_.Equals(other.httpRoutes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gateways_.GetHashCode();
      hash ^= hosts_.GetHashCode();
      if (Export != false) hash ^= Export.GetHashCode();
      hash ^= httpRoutes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      gateways_.WriteTo(output, _repeated_gateways_codec);
      hosts_.WriteTo(output, _repeated_hosts_codec);
      if (Export != false) {
        output.WriteRawTag(24);
        output.WriteBool(Export);
      }
      httpRoutes_.WriteTo(output, _repeated_httpRoutes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gateways_.CalculateSize(_repeated_gateways_codec);
      size += hosts_.CalculateSize(_repeated_hosts_codec);
      if (Export != false) {
        size += 1 + 1;
      }
      size += httpRoutes_.CalculateSize(_repeated_httpRoutes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Networking other) {
      if (other == null) {
        return;
      }
      gateways_.Add(other.gateways_);
      hosts_.Add(other.hosts_);
      if (other.Export != false) {
        Export = other.Export;
      }
      httpRoutes_.Add(other.httpRoutes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gateways_.AddEntriesFrom(input, _repeated_gateways_codec);
            break;
          }
          case 18: {
            hosts_.AddEntriesFrom(input, _repeated_hosts_codec);
            break;
          }
          case 24: {
            Export = input.ReadBool();
            break;
          }
          case 34: {
            httpRoutes_.AddEntriesFrom(input, _repeated_httpRoutes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Container is a single docker container
  /// </summary>
  public sealed partial class Container : pb::IMessage<Container> {
    private static readonly pb::MessageParser<Container> _parser = new pb::MessageParser<Container>(() => new Container());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Container> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container(Container other) : this() {
      name_ = other.name_;
      image_ = other.image_;
      args_ = other.args_.Clone();
      env_ = other.env_.Clone();
      ports_ = other.ports_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container Clone() {
      return new Container(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the application
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private string image_ = "";
    /// <summary>
    /// docker image of application
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_args_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> args_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// args are arguments given to the docker image at startup
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Args {
      get { return args_; }
    }

    /// <summary>Field number for the "env" field.</summary>
    public const int EnvFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_env_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> env_ = new pbc::MapField<string, string>();
    /// <summary>
    /// k/v map of environmental variables
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Env {
      get { return env_; }
    }

    /// <summary>Field number for the "ports" field.</summary>
    public const int PortsFieldNumber = 5;
    private static readonly pbc::MapField<string, uint>.Codec _map_ports_codec
        = new pbc::MapField<string, uint>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForUInt32(16), 42);
    private readonly pbc::MapField<string, uint> ports_ = new pbc::MapField<string, uint>();
    /// <summary>
    /// k/v map of ports to expose ex: http: 80 https: 443
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, uint> Ports {
      get { return ports_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Container);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Container other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Image != other.Image) return false;
      if(!args_.Equals(other.args_)) return false;
      if (!Env.Equals(other.Env)) return false;
      if (!Ports.Equals(other.Ports)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      hash ^= args_.GetHashCode();
      hash ^= Env.GetHashCode();
      hash ^= Ports.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Image);
      }
      args_.WriteTo(output, _repeated_args_codec);
      env_.WriteTo(output, _map_env_codec);
      ports_.WriteTo(output, _map_ports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      size += args_.CalculateSize(_repeated_args_codec);
      size += env_.CalculateSize(_map_env_codec);
      size += ports_.CalculateSize(_map_ports_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Container other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      args_.Add(other.args_);
      env_.Add(other.env_);
      ports_.Add(other.ports_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Image = input.ReadString();
            break;
          }
          case 26: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
          case 34: {
            env_.AddEntriesFrom(input, _map_env_codec);
            break;
          }
          case 42: {
            ports_.AddEntriesFrom(input, _map_ports_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// App is a stateless application
  /// </summary>
  public sealed partial class App : pb::IMessage<App> {
    private static readonly pb::MessageParser<App> _parser = new pb::MessageParser<App>(() => new App());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<App> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public App() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public App(App other) : this() {
      name_ = other.name_;
      project_ = other.project_;
      containers_ = other.containers_.Clone();
      replicas_ = other.replicas_;
      networking_ = other.networking_ != null ? other.networking_.Clone() : null;
      authentication_ = other.authentication_ != null ? other.authentication_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public App Clone() {
      return new App(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the application
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 2;
    private string project_ = "";
    /// <summary>
    /// application project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "containers" field.</summary>
    public const int ContainersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Meshpaas.Container> _repeated_containers_codec
        = pb::FieldCodec.ForMessage(26, global::Meshpaas.Container.Parser);
    private readonly pbc::RepeatedField<global::Meshpaas.Container> containers_ = new pbc::RepeatedField<global::Meshpaas.Container>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Meshpaas.Container> Containers {
      get { return containers_; }
    }

    /// <summary>Field number for the "replicas" field.</summary>
    public const int ReplicasFieldNumber = 8;
    private uint replicas_;
    /// <summary>
    /// number of deployment replicas
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Replicas {
      get { return replicas_; }
      set {
        replicas_ = value;
      }
    }

    /// <summary>Field number for the "networking" field.</summary>
    public const int NetworkingFieldNumber = 11;
    private global::Meshpaas.Networking networking_;
    /// <summary>
    /// gateway/service-mesh networking
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Meshpaas.Networking Networking {
      get { return networking_; }
      set {
        networking_ = value;
      }
    }

    /// <summary>Field number for the "authentication" field.</summary>
    public const int AuthenticationFieldNumber = 12;
    private global::Meshpaas.Authn authentication_;
    /// <summary>
    /// application authentication options
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Meshpaas.Authn Authentication {
      get { return authentication_; }
      set {
        authentication_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 20;
    private global::Meshpaas.AppStatus status_;
    /// <summary>
    /// status tracks the state of the application during it's lifecycle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Meshpaas.AppStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as App);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(App other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Project != other.Project) return false;
      if(!containers_.Equals(other.containers_)) return false;
      if (Replicas != other.Replicas) return false;
      if (!object.Equals(Networking, other.Networking)) return false;
      if (!object.Equals(Authentication, other.Authentication)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      hash ^= containers_.GetHashCode();
      if (Replicas != 0) hash ^= Replicas.GetHashCode();
      if (networking_ != null) hash ^= Networking.GetHashCode();
      if (authentication_ != null) hash ^= Authentication.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      containers_.WriteTo(output, _repeated_containers_codec);
      if (Replicas != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Replicas);
      }
      if (networking_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Networking);
      }
      if (authentication_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Authentication);
      }
      if (status_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      size += containers_.CalculateSize(_repeated_containers_codec);
      if (Replicas != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Replicas);
      }
      if (networking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Networking);
      }
      if (authentication_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authentication);
      }
      if (status_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(App other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      containers_.Add(other.containers_);
      if (other.Replicas != 0) {
        Replicas = other.Replicas;
      }
      if (other.networking_ != null) {
        if (networking_ == null) {
          networking_ = new global::Meshpaas.Networking();
        }
        Networking.MergeFrom(other.Networking);
      }
      if (other.authentication_ != null) {
        if (authentication_ == null) {
          authentication_ = new global::Meshpaas.Authn();
        }
        Authentication.MergeFrom(other.Authentication);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Meshpaas.AppStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
          case 26: {
            containers_.AddEntriesFrom(input, _repeated_containers_codec);
            break;
          }
          case 64: {
            Replicas = input.ReadUInt32();
            break;
          }
          case 90: {
            if (networking_ == null) {
              networking_ = new global::Meshpaas.Networking();
            }
            input.ReadMessage(networking_);
            break;
          }
          case 98: {
            if (authentication_ == null) {
              authentication_ = new global::Meshpaas.Authn();
            }
            input.ReadMessage(authentication_);
            break;
          }
          case 162: {
            if (status_ == null) {
              status_ = new global::Meshpaas.AppStatus();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Task is scheduled cron job
  /// </summary>
  public sealed partial class Task : pb::IMessage<Task> {
    private static readonly pb::MessageParser<Task> _parser = new pb::MessageParser<Task>(() => new Task());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Task> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Task() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Task(Task other) : this() {
      name_ = other.name_;
      project_ = other.project_;
      containers_ = other.containers_.Clone();
      schedule_ = other.schedule_;
      completions_ = other.completions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Task Clone() {
      return new Task(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the task
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 2;
    private string project_ = "";
    /// <summary>
    /// task project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "containers" field.</summary>
    public const int ContainersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Meshpaas.Container> _repeated_containers_codec
        = pb::FieldCodec.ForMessage(26, global::Meshpaas.Container.Parser);
    private readonly pbc::RepeatedField<global::Meshpaas.Container> containers_ = new pbc::RepeatedField<global::Meshpaas.Container>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Meshpaas.Container> Containers {
      get { return containers_; }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 7;
    private string schedule_ = "";
    /// <summary>
    /// schedule is the cron schedule: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Schedule {
      get { return schedule_; }
      set {
        schedule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "completions" field.</summary>
    public const int CompletionsFieldNumber = 8;
    private uint completions_;
    /// <summary>
    /// completions is the number of times to execute the task. If completions = 0, the task will run forever
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Completions {
      get { return completions_; }
      set {
        completions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Task);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Task other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Project != other.Project) return false;
      if(!containers_.Equals(other.containers_)) return false;
      if (Schedule != other.Schedule) return false;
      if (Completions != other.Completions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      hash ^= containers_.GetHashCode();
      if (Schedule.Length != 0) hash ^= Schedule.GetHashCode();
      if (Completions != 0) hash ^= Completions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      containers_.WriteTo(output, _repeated_containers_codec);
      if (Schedule.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Schedule);
      }
      if (Completions != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Completions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      size += containers_.CalculateSize(_repeated_containers_codec);
      if (Schedule.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Schedule);
      }
      if (Completions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Completions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Task other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      containers_.Add(other.containers_);
      if (other.Schedule.Length != 0) {
        Schedule = other.Schedule;
      }
      if (other.Completions != 0) {
        Completions = other.Completions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
          case 26: {
            containers_.AddEntriesFrom(input, _repeated_containers_codec);
            break;
          }
          case 58: {
            Schedule = input.ReadString();
            break;
          }
          case 64: {
            Completions = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// TaskInput creates/updates a task(cron job)
  /// </summary>
  public sealed partial class TaskInput : pb::IMessage<TaskInput> {
    private static readonly pb::MessageParser<TaskInput> _parser = new pb::MessageParser<TaskInput>(() => new TaskInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskInput(TaskInput other) : this() {
      name_ = other.name_;
      project_ = other.project_;
      containers_ = other.containers_.Clone();
      schedule_ = other.schedule_;
      completions_ = other.completions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskInput Clone() {
      return new TaskInput(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the task
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 2;
    private string project_ = "";
    /// <summary>
    /// task project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "containers" field.</summary>
    public const int ContainersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Meshpaas.Container> _repeated_containers_codec
        = pb::FieldCodec.ForMessage(26, global::Meshpaas.Container.Parser);
    private readonly pbc::RepeatedField<global::Meshpaas.Container> containers_ = new pbc::RepeatedField<global::Meshpaas.Container>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Meshpaas.Container> Containers {
      get { return containers_; }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 7;
    private string schedule_ = "";
    /// <summary>
    /// schedule is the cron schedule: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Schedule {
      get { return schedule_; }
      set {
        schedule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "completions" field.</summary>
    public const int CompletionsFieldNumber = 8;
    private uint completions_;
    /// <summary>
    /// completions is the number of times to execute the task. If completions = 0, the task will run forever
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Completions {
      get { return completions_; }
      set {
        completions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Project != other.Project) return false;
      if(!containers_.Equals(other.containers_)) return false;
      if (Schedule != other.Schedule) return false;
      if (Completions != other.Completions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      hash ^= containers_.GetHashCode();
      if (Schedule.Length != 0) hash ^= Schedule.GetHashCode();
      if (Completions != 0) hash ^= Completions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      containers_.WriteTo(output, _repeated_containers_codec);
      if (Schedule.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Schedule);
      }
      if (Completions != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Completions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      size += containers_.CalculateSize(_repeated_containers_codec);
      if (Schedule.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Schedule);
      }
      if (Completions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Completions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskInput other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      containers_.Add(other.containers_);
      if (other.Schedule.Length != 0) {
        Schedule = other.Schedule;
      }
      if (other.Completions != 0) {
        Completions = other.Completions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
          case 26: {
            containers_.AddEntriesFrom(input, _repeated_containers_codec);
            break;
          }
          case 58: {
            Schedule = input.ReadString();
            break;
          }
          case 64: {
            Completions = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AppInput creates/replaces an app
  /// </summary>
  public sealed partial class AppInput : pb::IMessage<AppInput> {
    private static readonly pb::MessageParser<AppInput> _parser = new pb::MessageParser<AppInput>(() => new AppInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInput(AppInput other) : this() {
      name_ = other.name_;
      project_ = other.project_;
      containers_ = other.containers_.Clone();
      replicas_ = other.replicas_;
      networking_ = other.networking_ != null ? other.networking_.Clone() : null;
      authentication_ = other.authentication_ != null ? other.authentication_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInput Clone() {
      return new AppInput(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the application
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 2;
    private string project_ = "";
    /// <summary>
    /// application project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "containers" field.</summary>
    public const int ContainersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Meshpaas.Container> _repeated_containers_codec
        = pb::FieldCodec.ForMessage(26, global::Meshpaas.Container.Parser);
    private readonly pbc::RepeatedField<global::Meshpaas.Container> containers_ = new pbc::RepeatedField<global::Meshpaas.Container>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Meshpaas.Container> Containers {
      get { return containers_; }
    }

    /// <summary>Field number for the "replicas" field.</summary>
    public const int ReplicasFieldNumber = 7;
    private uint replicas_;
    /// <summary>
    /// number of deployment replicas
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Replicas {
      get { return replicas_; }
      set {
        replicas_ = value;
      }
    }

    /// <summary>Field number for the "networking" field.</summary>
    public const int NetworkingFieldNumber = 10;
    private global::Meshpaas.Networking networking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Meshpaas.Networking Networking {
      get { return networking_; }
      set {
        networking_ = value;
      }
    }

    /// <summary>Field number for the "authentication" field.</summary>
    public const int AuthenticationFieldNumber = 12;
    private global::Meshpaas.Authn authentication_;
    /// <summary>
    /// application authentication options
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Meshpaas.Authn Authentication {
      get { return authentication_; }
      set {
        authentication_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Project != other.Project) return false;
      if(!containers_.Equals(other.containers_)) return false;
      if (Replicas != other.Replicas) return false;
      if (!object.Equals(Networking, other.Networking)) return false;
      if (!object.Equals(Authentication, other.Authentication)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      hash ^= containers_.GetHashCode();
      if (Replicas != 0) hash ^= Replicas.GetHashCode();
      if (networking_ != null) hash ^= Networking.GetHashCode();
      if (authentication_ != null) hash ^= Authentication.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      containers_.WriteTo(output, _repeated_containers_codec);
      if (Replicas != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Replicas);
      }
      if (networking_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Networking);
      }
      if (authentication_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Authentication);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      size += containers_.CalculateSize(_repeated_containers_codec);
      if (Replicas != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Replicas);
      }
      if (networking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Networking);
      }
      if (authentication_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authentication);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInput other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      containers_.Add(other.containers_);
      if (other.Replicas != 0) {
        Replicas = other.Replicas;
      }
      if (other.networking_ != null) {
        if (networking_ == null) {
          networking_ = new global::Meshpaas.Networking();
        }
        Networking.MergeFrom(other.Networking);
      }
      if (other.authentication_ != null) {
        if (authentication_ == null) {
          authentication_ = new global::Meshpaas.Authn();
        }
        Authentication.MergeFrom(other.Authentication);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
          case 26: {
            containers_.AddEntriesFrom(input, _repeated_containers_codec);
            break;
          }
          case 56: {
            Replicas = input.ReadUInt32();
            break;
          }
          case 82: {
            if (networking_ == null) {
              networking_ = new global::Meshpaas.Networking();
            }
            input.ReadMessage(networking_);
            break;
          }
          case 98: {
            if (authentication_ == null) {
              authentication_ = new global::Meshpaas.Authn();
            }
            input.ReadMessage(authentication_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Ref : pb::IMessage<Ref> {
    private static readonly pb::MessageParser<Ref> _parser = new pb::MessageParser<Ref>(() => new Ref());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ref> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ref() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ref(Ref other) : this() {
      name_ = other.name_;
      project_ = other.project_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ref Clone() {
      return new Ref(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the application
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 2;
    private string project_ = "";
    /// <summary>
    /// application project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ref);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ref other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Project != other.Project) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ref other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Replica : pb::IMessage<Replica> {
    private static readonly pb::MessageParser<Replica> _parser = new pb::MessageParser<Replica>(() => new Replica());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Replica> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Replica() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Replica(Replica other) : this() {
      phase_ = other.phase_;
      condition_ = other.condition_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Replica Clone() {
      return new Replica(this);
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 1;
    private string phase_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phase {
      get { return phase_; }
      set {
        phase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 2;
    private string condition_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Condition {
      get { return condition_; }
      set {
        condition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 3;
    private string reason_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Replica);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Replica other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Phase != other.Phase) return false;
      if (Condition != other.Condition) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Phase.Length != 0) hash ^= Phase.GetHashCode();
      if (Condition.Length != 0) hash ^= Condition.GetHashCode();
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Phase.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Phase);
      }
      if (Condition.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Condition);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Phase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phase);
      }
      if (Condition.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Condition);
      }
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Replica other) {
      if (other == null) {
        return;
      }
      if (other.Phase.Length != 0) {
        Phase = other.Phase;
      }
      if (other.Condition.Length != 0) {
        Condition = other.Condition;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Phase = input.ReadString();
            break;
          }
          case 18: {
            Condition = input.ReadString();
            break;
          }
          case 26: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppStatus : pb::IMessage<AppStatus> {
    private static readonly pb::MessageParser<AppStatus> _parser = new pb::MessageParser<AppStatus>(() => new AppStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppStatus(AppStatus other) : this() {
      replicas_ = other.replicas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppStatus Clone() {
      return new AppStatus(this);
    }

    /// <summary>Field number for the "replicas" field.</summary>
    public const int ReplicasFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Meshpaas.Replica> _repeated_replicas_codec
        = pb::FieldCodec.ForMessage(10, global::Meshpaas.Replica.Parser);
    private readonly pbc::RepeatedField<global::Meshpaas.Replica> replicas_ = new pbc::RepeatedField<global::Meshpaas.Replica>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Meshpaas.Replica> Replicas {
      get { return replicas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!replicas_.Equals(other.replicas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= replicas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      replicas_.WriteTo(output, _repeated_replicas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += replicas_.CalculateSize(_repeated_replicas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppStatus other) {
      if (other == null) {
        return;
      }
      replicas_.Add(other.replicas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            replicas_.AddEntriesFrom(input, _repeated_replicas_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Log : pb::IMessage<Log> {
    private static readonly pb::MessageParser<Log> _parser = new pb::MessageParser<Log>(() => new Log());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Log> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log(Log other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log Clone() {
      return new Log(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Log);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Log other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Log other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Apps : pb::IMessage<Apps> {
    private static readonly pb::MessageParser<Apps> _parser = new pb::MessageParser<Apps>(() => new Apps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Apps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Apps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Apps(Apps other) : this() {
      applications_ = other.applications_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Apps Clone() {
      return new Apps(this);
    }

    /// <summary>Field number for the "applications" field.</summary>
    public const int ApplicationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Meshpaas.App> _repeated_applications_codec
        = pb::FieldCodec.ForMessage(10, global::Meshpaas.App.Parser);
    private readonly pbc::RepeatedField<global::Meshpaas.App> applications_ = new pbc::RepeatedField<global::Meshpaas.App>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Meshpaas.App> Applications {
      get { return applications_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Apps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Apps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!applications_.Equals(other.applications_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= applications_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      applications_.WriteTo(output, _repeated_applications_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += applications_.CalculateSize(_repeated_applications_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Apps other) {
      if (other == null) {
        return;
      }
      applications_.Add(other.applications_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            applications_.AddEntriesFrom(input, _repeated_applications_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Tasks : pb::IMessage<Tasks> {
    private static readonly pb::MessageParser<Tasks> _parser = new pb::MessageParser<Tasks>(() => new Tasks());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tasks> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tasks() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tasks(Tasks other) : this() {
      tasks_ = other.tasks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tasks Clone() {
      return new Tasks(this);
    }

    /// <summary>Field number for the "tasks" field.</summary>
    public const int Tasks_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Meshpaas.Task> _repeated_tasks_codec
        = pb::FieldCodec.ForMessage(10, global::Meshpaas.Task.Parser);
    private readonly pbc::RepeatedField<global::Meshpaas.Task> tasks_ = new pbc::RepeatedField<global::Meshpaas.Task>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Meshpaas.Task> Tasks_ {
      get { return tasks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tasks);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tasks other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tasks_.Equals(other.tasks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tasks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tasks_.WriteTo(output, _repeated_tasks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tasks_.CalculateSize(_repeated_tasks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tasks other) {
      if (other == null) {
        return;
      }
      tasks_.Add(other.tasks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tasks_.AddEntriesFrom(input, _repeated_tasks_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProjectInput : pb::IMessage<ProjectInput> {
    private static readonly pb::MessageParser<ProjectInput> _parser = new pb::MessageParser<ProjectInput>(() => new ProjectInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProjectInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectInput(ProjectInput other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectInput Clone() {
      return new ProjectInput(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProjectInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProjectInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProjectInput other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Project : pb::IMessage<Project> {
    private static readonly pb::MessageParser<Project> _parser = new pb::MessageParser<Project>(() => new Project());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Project> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Project() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Project(Project other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Project Clone() {
      return new Project(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Project);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Project other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Project other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProjectRef : pb::IMessage<ProjectRef> {
    private static readonly pb::MessageParser<ProjectRef> _parser = new pb::MessageParser<ProjectRef>(() => new ProjectRef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProjectRef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectRef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectRef(ProjectRef other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectRef Clone() {
      return new ProjectRef(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProjectRef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProjectRef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProjectRef other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Projects : pb::IMessage<Projects> {
    private static readonly pb::MessageParser<Projects> _parser = new pb::MessageParser<Projects>(() => new Projects());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Projects> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshpaas.SchemaReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Projects() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Projects(Projects other) : this() {
      projects_ = other.projects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Projects Clone() {
      return new Projects(this);
    }

    /// <summary>Field number for the "projects" field.</summary>
    public const int Projects_FieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_projects_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> projects_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Projects_ {
      get { return projects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Projects);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Projects other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!projects_.Equals(other.projects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= projects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      projects_.WriteTo(output, _repeated_projects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += projects_.CalculateSize(_repeated_projects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Projects other) {
      if (other == null) {
        return;
      }
      projects_.Add(other.projects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            projects_.AddEntriesFrom(input, _repeated_projects_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
