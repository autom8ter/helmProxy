// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: schema.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Hpaas {

  /// <summary>Holder for reflection information generated from schema.proto</summary>
  public static partial class SchemaReflection {

    #region Descriptor
    /// <summary>File descriptor for schema.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SchemaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzY2hlbWEucHJvdG8SBWhwYWFzGhxnb29nbGUvcHJvdG9idWYvc3RydWN0",
            "LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhlnb29n",
            "bGUvcHJvdG9idWYvYW55LnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHku",
            "cHJvdG8aNmdpdGh1Yi5jb20vbXdpdGtvdy9nby1wcm90by12YWxpZGF0b3Jz",
            "L3ZhbGlkYXRvci5wcm90byJ2CgpEZXBlbmRlbmN5Eh8KBWNoYXJ0GAEgASgJ",
            "QhDi3x8MCgpeLnsxLDIyNX0kEiEKB3ZlcnNpb24YAiABKAlCEOLfHwwKCl4u",
            "ezEsMjI1fSQSJAoKcmVwb3NpdG9yeRgDIAEoCUIQ4t8fDAoKXi57MSwyMjV9",
            "JCJNCgpNYWludGFpbmVyEh4KBG5hbWUYASABKAlCEOLfHwwKCl4uezEsMjI1",
            "fSQSHwoFZW1haWwYAiABKAlCEOLfHwwKCl4uezEsMjI1fSQiNwoGRmlsdGVy",
            "Eh4KBHRlcm0YASABKAlCEOLfHwwKCl4uezEsMjI1fSQSDQoFcmVnZXgYAiAB",
            "KAgi0AIKBUNoYXJ0Eh4KBG5hbWUYASABKAlCEOLfHwwKCl4uezEsMjI1fSQS",
            "DAoEaG9tZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCRIPCgd2ZXJzaW9u",
            "GAQgASgJEg8KB3NvdXJjZXMYBSADKAkSEAoIa2V5d29yZHMYBiADKAkSDAoE",
            "aWNvbhgHIAEoCRISCgpkZXByZWNhdGVkGAggASgIEicKDGRlcGVuZGVuY2ll",
            "cxgJIAMoCzIRLmhwYWFzLkRlcGVuZGVuY3kSJgoLbWFpbnRhaW5lcnMYCiAD",
            "KAsyES5ocGFhcy5NYWludGFpbmVyEiwKCG1ldGFkYXRhGAsgAygLMhouaHBh",
            "YXMuQ2hhcnQuTWV0YWRhdGFFbnRyeRovCg1NZXRhZGF0YUVudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiJgoGQ2hhcnRzEhwKBmNoYXJ0",
            "cxgBIAMoCzIMLmhwYWFzLkNoYXJ0IogBCgNBcHASHgoEbmFtZRgBIAEoCUIQ",
            "4t8fDAoKXi57MSwyMjV9JBIjCgluYW1lc3BhY2UYAiABKAlCEOLfHwwKCl4u",
            "ezEsMjI1fSQSHwoHcmVsZWFzZRgFIAEoCzIOLmhwYWFzLlJlbGVhc2USGwoF",
            "Y2hhcnQYFCABKAsyDC5ocGFhcy5DaGFydCIgCgRBcHBzEhgKBGFwcHMYASAD",
            "KAsyCi5ocGFhcy5BcHAingEKB1JlbGVhc2USDwoHdmVyc2lvbhgBIAEoDRIn",
            "CgZjb25maWcYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0Eg0KBW5v",
            "dGVzGAMgASgJEhMKC2Rlc2NyaXB0aW9uGAQgASgJEg4KBnN0YXR1cxgFIAEo",
            "CRIlCgp0aW1lc3RhbXBzGAYgASgLMhEuaHBhYXMuVGltZXN0YW1wcyKTAQoK",
            "VGltZXN0YW1wcxIrCgdjcmVhdGVkGAEgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIrCgd1cGRhdGVkGAIgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIrCgdkZWxldGVkGAMgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcCJNCgZBcHBSZWYSIwoJbmFtZXNwYWNlGAEgASgJQhDi3x8M",
            "CgpeLnsxLDIyNX0kEh4KBG5hbWUYAiABKAlCEOLfHwwKCl4uezEsMjI1fSQi",
            "2AEKCEFwcElucHV0EiMKCW5hbWVzcGFjZRgBIAEoCUIQ4t8fDAoKXi57MSwy",
            "MjV9JBIfCgVjaGFydBgCIAEoCUIQ4t8fDAoKXi57MSwyMjV9JBIiCghhcHBf",
            "bmFtZRgDIAEoCUIQ4t8fDAoKXi57MSwyMjV9JBIzCgZjb25maWcYBCADKAsy",
            "Gy5ocGFhcy5BcHBJbnB1dC5Db25maWdFbnRyeUIG4t8fAiABGi0KC0NvbmZp",
            "Z0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiLgoMTmFt",
            "ZXNwYWNlUmVmEh4KBG5hbWUYASABKAlCEOLfHwwKCl4uezEsMjI1fSQiOAoN",
            "TmFtZXNwYWNlUmVmcxInCgpuYW1lc3BhY2VzGAEgAygLMhMuaHBhYXMuTmFt",
            "ZXNwYWNlUmVmMtkCCg9NZXNoUGFhc1NlcnZpY2USJQoGR2V0QXBwEg0uaHBh",
            "YXMuQXBwUmVmGgouaHBhYXMuQXBwIgASLgoITGlzdEFwcHMSEy5ocGFhcy5O",
            "YW1lc3BhY2VSZWYaCy5ocGFhcy5BcHBzIgASNwoMVW5pbnN0YWxsQXBwEg0u",
            "aHBhYXMuQXBwUmVmGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASKgoLUm9s",
            "bGJhY2tBcHASDS5ocGFhcy5BcHBSZWYaCi5ocGFhcy5BcHAiABIrCgpJbnN0",
            "YWxsQXBwEg8uaHBhYXMuQXBwSW5wdXQaCi5ocGFhcy5BcHAiABIqCglVcGRh",
            "dGVBcHASDy5ocGFhcy5BcHBJbnB1dBoKLmhwYWFzLkFwcCIAEjEKD1NlYXJj",
            "aFRlbXBsYXRlcxINLmhwYWFzLkZpbHRlchoNLmhwYWFzLkNoYXJ0cyIAQgla",
            "B2hwYWFzcGJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Validator.ValidatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.Dependency), global::Hpaas.Dependency.Parser, new[]{ "Chart", "Version", "Repository" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.Maintainer), global::Hpaas.Maintainer.Parser, new[]{ "Name", "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.Filter), global::Hpaas.Filter.Parser, new[]{ "Term", "Regex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.Chart), global::Hpaas.Chart.Parser, new[]{ "Name", "Home", "Description", "Version", "Sources", "Keywords", "Icon", "Deprecated", "Dependencies", "Maintainers", "Metadata" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.Charts), global::Hpaas.Charts.Parser, new[]{ "Charts_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.App), global::Hpaas.App.Parser, new[]{ "Name", "Namespace", "Release", "Chart" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.Apps), global::Hpaas.Apps.Parser, new[]{ "Apps_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.Release), global::Hpaas.Release.Parser, new[]{ "Version", "Config", "Notes", "Description", "Status", "Timestamps" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.Timestamps), global::Hpaas.Timestamps.Parser, new[]{ "Created", "Updated", "Deleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.AppRef), global::Hpaas.AppRef.Parser, new[]{ "Namespace", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.AppInput), global::Hpaas.AppInput.Parser, new[]{ "Namespace", "Chart", "AppName", "Config" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.NamespaceRef), global::Hpaas.NamespaceRef.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hpaas.NamespaceRefs), global::Hpaas.NamespaceRefs.Parser, new[]{ "Namespaces" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Dependency is a dependency required by a helm chart
  /// </summary>
  public sealed partial class Dependency : pb::IMessage<Dependency> {
    private static readonly pb::MessageParser<Dependency> _parser = new pb::MessageParser<Dependency>(() => new Dependency());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dependency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependency(Dependency other) : this() {
      chart_ = other.chart_;
      version_ = other.version_;
      repository_ = other.repository_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependency Clone() {
      return new Dependency(this);
    }

    /// <summary>Field number for the "chart" field.</summary>
    public const int ChartFieldNumber = 1;
    private string chart_ = "";
    /// <summary>
    /// name of the chart dependency
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Chart {
      get { return chart_; }
      set {
        chart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// name of the chart version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "repository" field.</summary>
    public const int RepositoryFieldNumber = 3;
    private string repository_ = "";
    /// <summary>
    /// the URL of the helm repository.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Repository {
      get { return repository_; }
      set {
        repository_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dependency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dependency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Chart != other.Chart) return false;
      if (Version != other.Version) return false;
      if (Repository != other.Repository) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Chart.Length != 0) hash ^= Chart.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Repository.Length != 0) hash ^= Repository.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Chart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Chart);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (Repository.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Repository);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Chart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Chart);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Repository.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Repository);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dependency other) {
      if (other == null) {
        return;
      }
      if (other.Chart.Length != 0) {
        Chart = other.Chart;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Repository.Length != 0) {
        Repository = other.Repository;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Chart = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            Repository = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Maintainer is the maintainer of a helm chart
  /// </summary>
  public sealed partial class Maintainer : pb::IMessage<Maintainer> {
    private static readonly pb::MessageParser<Maintainer> _parser = new pb::MessageParser<Maintainer>(() => new Maintainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Maintainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Maintainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Maintainer(Maintainer other) : this() {
      name_ = other.name_;
      email_ = other.email_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Maintainer Clone() {
      return new Maintainer(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name is the name of the maintainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    /// <summary>
    /// email is the email of the maintainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Maintainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Maintainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Email != other.Email) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Maintainer other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Filter is used for filtering helm chart search results
  /// </summary>
  public sealed partial class Filter : pb::IMessage<Filter> {
    private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Filter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter(Filter other) : this() {
      term_ = other.term_;
      regex_ = other.regex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter Clone() {
      return new Filter(this);
    }

    /// <summary>Field number for the "term" field.</summary>
    public const int TermFieldNumber = 1;
    private string term_ = "";
    /// <summary>
    /// term to search for
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Term {
      get { return term_; }
      set {
        term_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "regex" field.</summary>
    public const int RegexFieldNumber = 2;
    private bool regex_;
    /// <summary>
    /// term is a regex expression
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Regex {
      get { return regex_; }
      set {
        regex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Filter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Filter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Term != other.Term) return false;
      if (Regex != other.Regex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Term.Length != 0) hash ^= Term.GetHashCode();
      if (Regex != false) hash ^= Regex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Term.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Term);
      }
      if (Regex != false) {
        output.WriteRawTag(16);
        output.WriteBool(Regex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Term.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Term);
      }
      if (Regex != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Filter other) {
      if (other == null) {
        return;
      }
      if (other.Term.Length != 0) {
        Term = other.Term;
      }
      if (other.Regex != false) {
        Regex = other.Regex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Term = input.ReadString();
            break;
          }
          case 16: {
            Regex = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Chart is a helm chart that may be used to deploy an App
  /// </summary>
  public sealed partial class Chart : pb::IMessage<Chart> {
    private static readonly pb::MessageParser<Chart> _parser = new pb::MessageParser<Chart>(() => new Chart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Chart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chart(Chart other) : this() {
      name_ = other.name_;
      home_ = other.home_;
      description_ = other.description_;
      version_ = other.version_;
      sources_ = other.sources_.Clone();
      keywords_ = other.keywords_.Clone();
      icon_ = other.icon_;
      deprecated_ = other.deprecated_;
      dependencies_ = other.dependencies_.Clone();
      maintainers_ = other.maintainers_.Clone();
      metadata_ = other.metadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chart Clone() {
      return new Chart(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the app chart
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "home" field.</summary>
    public const int HomeFieldNumber = 2;
    private string home_ = "";
    /// <summary>
    /// home page of the app chart
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Home {
      get { return home_; }
      set {
        home_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// description of the app chart
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private string version_ = "";
    /// <summary>
    /// version of the app chart
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sources" field.</summary>
    public const int SourcesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_sources_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> sources_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Sources {
      get { return sources_; }
    }

    /// <summary>Field number for the "keywords" field.</summary>
    public const int KeywordsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_keywords_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> keywords_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// keywords associated with the app chart
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Keywords {
      get { return keywords_; }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 7;
    private string icon_ = "";
    /// <summary>
    /// icon is an the icon/brand associated with the chart
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deprecated" field.</summary>
    public const int DeprecatedFieldNumber = 8;
    private bool deprecated_;
    /// <summary>
    /// chart is not actively maintained if deprecated = true
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deprecated {
      get { return deprecated_; }
      set {
        deprecated_ = value;
      }
    }

    /// <summary>Field number for the "dependencies" field.</summary>
    public const int DependenciesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Hpaas.Dependency> _repeated_dependencies_codec
        = pb::FieldCodec.ForMessage(74, global::Hpaas.Dependency.Parser);
    private readonly pbc::RepeatedField<global::Hpaas.Dependency> dependencies_ = new pbc::RepeatedField<global::Hpaas.Dependency>();
    /// <summary>
    /// extra charts that this chart depends on
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Hpaas.Dependency> Dependencies {
      get { return dependencies_; }
    }

    /// <summary>Field number for the "maintainers" field.</summary>
    public const int MaintainersFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Hpaas.Maintainer> _repeated_maintainers_codec
        = pb::FieldCodec.ForMessage(82, global::Hpaas.Maintainer.Parser);
    private readonly pbc::RepeatedField<global::Hpaas.Maintainer> maintainers_ = new pbc::RepeatedField<global::Hpaas.Maintainer>();
    /// <summary>
    /// maintainers of this chart
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Hpaas.Maintainer> Maintainers {
      get { return maintainers_; }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 11;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 90);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    /// <summary>
    /// arbitrary metadata associated with the chart
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Chart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Chart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Home != other.Home) return false;
      if (Description != other.Description) return false;
      if (Version != other.Version) return false;
      if(!sources_.Equals(other.sources_)) return false;
      if(!keywords_.Equals(other.keywords_)) return false;
      if (Icon != other.Icon) return false;
      if (Deprecated != other.Deprecated) return false;
      if(!dependencies_.Equals(other.dependencies_)) return false;
      if(!maintainers_.Equals(other.maintainers_)) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Home.Length != 0) hash ^= Home.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      hash ^= sources_.GetHashCode();
      hash ^= keywords_.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Deprecated != false) hash ^= Deprecated.GetHashCode();
      hash ^= dependencies_.GetHashCode();
      hash ^= maintainers_.GetHashCode();
      hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Home.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Home);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Version);
      }
      sources_.WriteTo(output, _repeated_sources_codec);
      keywords_.WriteTo(output, _repeated_keywords_codec);
      if (Icon.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Icon);
      }
      if (Deprecated != false) {
        output.WriteRawTag(64);
        output.WriteBool(Deprecated);
      }
      dependencies_.WriteTo(output, _repeated_dependencies_codec);
      maintainers_.WriteTo(output, _repeated_maintainers_codec);
      metadata_.WriteTo(output, _map_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Home.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Home);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      size += sources_.CalculateSize(_repeated_sources_codec);
      size += keywords_.CalculateSize(_repeated_keywords_codec);
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Deprecated != false) {
        size += 1 + 1;
      }
      size += dependencies_.CalculateSize(_repeated_dependencies_codec);
      size += maintainers_.CalculateSize(_repeated_maintainers_codec);
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Chart other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Home.Length != 0) {
        Home = other.Home;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      sources_.Add(other.sources_);
      keywords_.Add(other.keywords_);
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Deprecated != false) {
        Deprecated = other.Deprecated;
      }
      dependencies_.Add(other.dependencies_);
      maintainers_.Add(other.maintainers_);
      metadata_.Add(other.metadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Home = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Version = input.ReadString();
            break;
          }
          case 42: {
            sources_.AddEntriesFrom(input, _repeated_sources_codec);
            break;
          }
          case 50: {
            keywords_.AddEntriesFrom(input, _repeated_keywords_codec);
            break;
          }
          case 58: {
            Icon = input.ReadString();
            break;
          }
          case 64: {
            Deprecated = input.ReadBool();
            break;
          }
          case 74: {
            dependencies_.AddEntriesFrom(input, _repeated_dependencies_codec);
            break;
          }
          case 82: {
            maintainers_.AddEntriesFrom(input, _repeated_maintainers_codec);
            break;
          }
          case 90: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Charts is a list of helm charts
  /// </summary>
  public sealed partial class Charts : pb::IMessage<Charts> {
    private static readonly pb::MessageParser<Charts> _parser = new pb::MessageParser<Charts>(() => new Charts());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Charts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Charts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Charts(Charts other) : this() {
      charts_ = other.charts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Charts Clone() {
      return new Charts(this);
    }

    /// <summary>Field number for the "charts" field.</summary>
    public const int Charts_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Hpaas.Chart> _repeated_charts_codec
        = pb::FieldCodec.ForMessage(10, global::Hpaas.Chart.Parser);
    private readonly pbc::RepeatedField<global::Hpaas.Chart> charts_ = new pbc::RepeatedField<global::Hpaas.Chart>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Hpaas.Chart> Charts_ {
      get { return charts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Charts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Charts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!charts_.Equals(other.charts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= charts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      charts_.WriteTo(output, _repeated_charts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += charts_.CalculateSize(_repeated_charts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Charts other) {
      if (other == null) {
        return;
      }
      charts_.Add(other.charts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            charts_.AddEntriesFrom(input, _repeated_charts_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// App is an App created from a helm chart
  /// </summary>
  public sealed partial class App : pb::IMessage<App> {
    private static readonly pb::MessageParser<App> _parser = new pb::MessageParser<App>(() => new App());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<App> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public App() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public App(App other) : this() {
      name_ = other.name_;
      namespace_ = other.namespace_;
      release_ = other.release_ != null ? other.release_.Clone() : null;
      chart_ = other.chart_ != null ? other.chart_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public App Clone() {
      return new App(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the application
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 2;
    private string namespace_ = "";
    /// <summary>
    /// namespace name the app belongs to(autocreated)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 5;
    private global::Hpaas.Release release_;
    /// <summary>
    /// release holds information about the currently deployed release of the application
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hpaas.Release Release {
      get { return release_; }
      set {
        release_ = value;
      }
    }

    /// <summary>Field number for the "chart" field.</summary>
    public const int ChartFieldNumber = 20;
    private global::Hpaas.Chart chart_;
    /// <summary>
    /// chart is the chart used to deploy the App
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hpaas.Chart Chart {
      get { return chart_; }
      set {
        chart_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as App);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(App other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Namespace != other.Namespace) return false;
      if (!object.Equals(Release, other.Release)) return false;
      if (!object.Equals(Chart, other.Chart)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (release_ != null) hash ^= Release.GetHashCode();
      if (chart_ != null) hash ^= Chart.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Namespace);
      }
      if (release_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Release);
      }
      if (chart_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Chart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (release_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Release);
      }
      if (chart_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Chart);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(App other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      if (other.release_ != null) {
        if (release_ == null) {
          release_ = new global::Hpaas.Release();
        }
        Release.MergeFrom(other.Release);
      }
      if (other.chart_ != null) {
        if (chart_ == null) {
          chart_ = new global::Hpaas.Chart();
        }
        Chart.MergeFrom(other.Chart);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Namespace = input.ReadString();
            break;
          }
          case 42: {
            if (release_ == null) {
              release_ = new global::Hpaas.Release();
            }
            input.ReadMessage(release_);
            break;
          }
          case 162: {
            if (chart_ == null) {
              chart_ = new global::Hpaas.Chart();
            }
            input.ReadMessage(chart_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Apps is a list of apps
  /// </summary>
  public sealed partial class Apps : pb::IMessage<Apps> {
    private static readonly pb::MessageParser<Apps> _parser = new pb::MessageParser<Apps>(() => new Apps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Apps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Apps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Apps(Apps other) : this() {
      apps_ = other.apps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Apps Clone() {
      return new Apps(this);
    }

    /// <summary>Field number for the "apps" field.</summary>
    public const int Apps_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Hpaas.App> _repeated_apps_codec
        = pb::FieldCodec.ForMessage(10, global::Hpaas.App.Parser);
    private readonly pbc::RepeatedField<global::Hpaas.App> apps_ = new pbc::RepeatedField<global::Hpaas.App>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Hpaas.App> Apps_ {
      get { return apps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Apps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Apps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!apps_.Equals(other.apps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= apps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      apps_.WriteTo(output, _repeated_apps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += apps_.CalculateSize(_repeated_apps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Apps other) {
      if (other == null) {
        return;
      }
      apps_.Add(other.apps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            apps_.AddEntriesFrom(input, _repeated_apps_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Release tracks the state of an app during the lifecycle of it's current deployment
  /// </summary>
  public sealed partial class Release : pb::IMessage<Release> {
    private static readonly pb::MessageParser<Release> _parser = new pb::MessageParser<Release>(() => new Release());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Release> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Release() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Release(Release other) : this() {
      version_ = other.version_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      notes_ = other.notes_;
      description_ = other.description_;
      status_ = other.status_;
      timestamps_ = other.timestamps_ != null ? other.timestamps_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Release Clone() {
      return new Release(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    /// <summary>
    /// version of the App. Iterates with each upgrade
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct config_;
    /// <summary>
    /// config values
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 3;
    private string notes_ = "";
    /// <summary>
    /// notes associated with the release
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Notes {
      get { return notes_; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// description of the release
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private string status_ = "";
    /// <summary>
    /// status of the release
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamps" field.</summary>
    public const int TimestampsFieldNumber = 6;
    private global::Hpaas.Timestamps timestamps_;
    /// <summary>
    /// lifecycle timestamps related
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hpaas.Timestamps Timestamps {
      get { return timestamps_; }
      set {
        timestamps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Release);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Release other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (Notes != other.Notes) return false;
      if (Description != other.Description) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(Timestamps, other.Timestamps)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (Notes.Length != 0) hash ^= Notes.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (timestamps_ != null) hash ^= Timestamps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (Notes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Notes);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Status);
      }
      if (timestamps_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Timestamps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (Notes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (timestamps_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Release other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          config_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.Notes.Length != 0) {
        Notes = other.Notes;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      if (other.timestamps_ != null) {
        if (timestamps_ == null) {
          timestamps_ = new global::Hpaas.Timestamps();
        }
        Timestamps.MergeFrom(other.Timestamps);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              config_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(config_);
            break;
          }
          case 26: {
            Notes = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            Status = input.ReadString();
            break;
          }
          case 50: {
            if (timestamps_ == null) {
              timestamps_ = new global::Hpaas.Timestamps();
            }
            input.ReadMessage(timestamps_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Timestamps tracks timestamps related to a release
  /// </summary>
  public sealed partial class Timestamps : pb::IMessage<Timestamps> {
    private static readonly pb::MessageParser<Timestamps> _parser = new pb::MessageParser<Timestamps>(() => new Timestamps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Timestamps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timestamps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timestamps(Timestamps other) : this() {
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      deleted_ = other.deleted_ != null ? other.deleted_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timestamps Clone() {
      return new Timestamps(this);
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// when the release was first deployed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// when the release was last deployed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp deleted_;
    /// <summary>
    /// when the release was deleted
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Deleted {
      get { return deleted_; }
      set {
        deleted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Timestamps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Timestamps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      if (!object.Equals(Deleted, other.Deleted)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (deleted_ != null) hash ^= Deleted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (created_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Updated);
      }
      if (deleted_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Deleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (deleted_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deleted);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Timestamps other) {
      if (other == null) {
        return;
      }
      if (other.created_ != null) {
        if (created_ == null) {
          created_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          updated_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      if (other.deleted_ != null) {
        if (deleted_ == null) {
          deleted_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Deleted.MergeFrom(other.Deleted);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (created_ == null) {
              created_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(created_);
            break;
          }
          case 18: {
            if (updated_ == null) {
              updated_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(updated_);
            break;
          }
          case 26: {
            if (deleted_ == null) {
              deleted_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(deleted_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AppRef is a generic structure for looking up apps
  /// </summary>
  public sealed partial class AppRef : pb::IMessage<AppRef> {
    private static readonly pb::MessageParser<AppRef> _parser = new pb::MessageParser<AppRef>(() => new AppRef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppRef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppRef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppRef(AppRef other) : this() {
      namespace_ = other.namespace_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppRef Clone() {
      return new AppRef(this);
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 1;
    private string namespace_ = "";
    /// <summary>
    /// namespace is the k8s namespace the app/release belongs to(autocreated)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// name is the name of the app/release
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppRef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppRef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Namespace != other.Namespace) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Namespace.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Namespace);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppRef other) {
      if (other == null) {
        return;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Namespace = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AppInput is used to create/update an app
  /// </summary>
  public sealed partial class AppInput : pb::IMessage<AppInput> {
    private static readonly pb::MessageParser<AppInput> _parser = new pb::MessageParser<AppInput>(() => new AppInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInput(AppInput other) : this() {
      namespace_ = other.namespace_;
      chart_ = other.chart_;
      appName_ = other.appName_;
      config_ = other.config_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInput Clone() {
      return new AppInput(this);
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 1;
    private string namespace_ = "";
    /// <summary>
    /// namespace name the app belongs to(autocreated)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chart" field.</summary>
    public const int ChartFieldNumber = 2;
    private string chart_ = "";
    /// <summary>
    /// the app chart to use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Chart {
      get { return chart_; }
      set {
        chart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 3;
    private string appName_ = "";
    /// <summary>
    /// name of the app
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_config_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> config_ = new pbc::MapField<string, string>();
    /// <summary>
    /// config values used to render the app chart
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Config {
      get { return config_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Namespace != other.Namespace) return false;
      if (Chart != other.Chart) return false;
      if (AppName != other.AppName) return false;
      if (!Config.Equals(other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (Chart.Length != 0) hash ^= Chart.GetHashCode();
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Namespace.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Namespace);
      }
      if (Chart.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Chart);
      }
      if (AppName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AppName);
      }
      config_.WriteTo(output, _map_config_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (Chart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Chart);
      }
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      size += config_.CalculateSize(_map_config_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInput other) {
      if (other == null) {
        return;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      if (other.Chart.Length != 0) {
        Chart = other.Chart;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      config_.Add(other.config_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Namespace = input.ReadString();
            break;
          }
          case 18: {
            Chart = input.ReadString();
            break;
          }
          case 26: {
            AppName = input.ReadString();
            break;
          }
          case 34: {
            config_.AddEntriesFrom(input, _map_config_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NamespaceRef is a generic structure for looking up namespaces
  /// </summary>
  public sealed partial class NamespaceRef : pb::IMessage<NamespaceRef> {
    private static readonly pb::MessageParser<NamespaceRef> _parser = new pb::MessageParser<NamespaceRef>(() => new NamespaceRef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NamespaceRef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamespaceRef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamespaceRef(NamespaceRef other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamespaceRef Clone() {
      return new NamespaceRef(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name of the namespace
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NamespaceRef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NamespaceRef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NamespaceRef other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NamespaceRefs is a list of NamespaceRef
  /// </summary>
  public sealed partial class NamespaceRefs : pb::IMessage<NamespaceRefs> {
    private static readonly pb::MessageParser<NamespaceRefs> _parser = new pb::MessageParser<NamespaceRefs>(() => new NamespaceRefs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NamespaceRefs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hpaas.SchemaReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamespaceRefs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamespaceRefs(NamespaceRefs other) : this() {
      namespaces_ = other.namespaces_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamespaceRefs Clone() {
      return new NamespaceRefs(this);
    }

    /// <summary>Field number for the "namespaces" field.</summary>
    public const int NamespacesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Hpaas.NamespaceRef> _repeated_namespaces_codec
        = pb::FieldCodec.ForMessage(10, global::Hpaas.NamespaceRef.Parser);
    private readonly pbc::RepeatedField<global::Hpaas.NamespaceRef> namespaces_ = new pbc::RepeatedField<global::Hpaas.NamespaceRef>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Hpaas.NamespaceRef> Namespaces {
      get { return namespaces_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NamespaceRefs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NamespaceRefs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!namespaces_.Equals(other.namespaces_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= namespaces_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      namespaces_.WriteTo(output, _repeated_namespaces_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += namespaces_.CalculateSize(_repeated_namespaces_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NamespaceRefs other) {
      if (other == null) {
        return;
      }
      namespaces_.Add(other.namespaces_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            namespaces_.AddEntriesFrom(input, _repeated_namespaces_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
