# time is an rfc 3339 timestamp
scalar Time
# Map is a k/v map where the key is a string and the value is any value
scalar Map

input AppInput {
    # name of the application
    name: String!
    # application namespace
    namespace: String!
    # docker image of application
    image: String!
    # k/v map of environmental variables
    env: Map
    # k/v map of ports to expose ex: http: 80 https: 443
    ports: Map!
    # number of deployment replicas min:1
    replicas: Int!
    # state is optional: use if the application is stateful
    state: StateInput
}

input StateInput {
    statefulset: Boolean!
    storage_path: String!
    storage_size: String!
}

type App {
    # name of the application
    name: String!
    # application namespace
    namespace: String!
    # docker image of application
    image: String!
    # k/v map of environmental variables
    env: Map
    # k/v map of ports to expose ex: http: 80 https: 443
    ports: Map!
    # number of deployment replicas min:1
    replicas: Int!
    # state is optional: use if the application is stateful
    state: State
    # status of various components in k8s cluster (svc/deployment/namespace)
    status: Status!
}

type State {
    statefulset: Boolean!
    storage_path: String!
    storage_size: String!
}

type Status {
    namespace: String!
    deployment: String!
    load_balancer: String!
}

type Mutation {
    createApp(input: AppInput!): App
    updateApp(input: AppInput!): App
}

type Query {
    getApp(name: String!, namespace: String!): App
}
