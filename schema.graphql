# time is an rfc 3339 timestamp
scalar Time
# Map is a k/v map where the key is a string and the value is any value
scalar Map

type App {
    # name of the application
    name: String!
    # application namespace
    namespace: String!
    # docker image of application
    image: String!
    # k/v map of environmental variables
    env: Map
    # k/v map of ports to expose ex: http: 80 https: 443
    ports: Map!
    # number of deployment replicas min:1
    replicas: Int!
    # status tracks the state of the application during it's lifecycle
    status: Status!
}

type Replica {
    phase: String!
    condition: String!
    reason: String!
}

type Status {
    replicas: [Replica]!
}

type Log {
    message: String!
}


input AppConstructor {
    # name of the application
    name: String!
    # application namespace
    namespace: String!
    # docker image of application
    image: String!
    # k/v map of environmental variables
    env: Map
    # k/v map of ports to expose ex: http: 80 https: 443
    ports: Map!
    # number of deployment replicas min:1
    replicas: Int!
}

input AppUpdate {
    # name of the application
    name: String!
    # application namespace
    namespace: String!
    # docker image of application
    image: String
    # k/v map of environmental variables
    env: Map
    # k/v map of ports to expose ex: http: 80 https: 443
    ports: Map
    # number of deployment replicas min:1
    replicas: Int
}

input AppRef {
    # name of the application
    name: String!
    # application namespace
    namespace: String!
}

type Mutation {
    createApp(input: AppConstructor!): App
    updateApp(input: AppUpdate!): App
    delApp(input: AppRef): String
}

type Query {
    getApp(input: AppRef): App
}

type Subscription {
    logs(input: AppRef): String!
}
