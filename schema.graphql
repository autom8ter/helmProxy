# time is an rfc 3339 timestamp
scalar Time
# Map is a k/v map where the key is a string and the value is any value
scalar Map

#
type Maintainer {
    name: String!
    email: String!
}

# Dependency is a dependency required by a helm chart
type Dependency {
    chart: String!
    version: String!
    repository: String!
}

#
type Release {
    #
    version: Int!
    #
    config: Map!
    #
    notes: String
    #
    description: String
    #
    status: String
    #
    timestamps: Timestamps
}

#
type Timestamps {
    #
    created: Time
    #
    updated: Time
    #
    deleted: Time
}

#
type Chart {
    #
    name: String!
    #
    home: String
    #
    icon: String
    #
    version: String
    #
    description: String
    #
    sources: [String!]
    #
    keywords: [String!]
    #
    deprecated: Boolean
    #
    metadata: Map
    #
    maintainers: [Maintainer!]
    #
    dependencies: [Dependency!]
}

#
type App {
    #
    name: String!
    #
    namespace: String!
    #
    release: Release!
    #
    chart: Chart!
}

#
input ChartFilter {
    #
    term: String!
    #
    regex: Boolean
}

#
input AppFilter {
    namespace: String
    selector: String
    limit: Int
    offset: Int
}

#
input HistoryFilter {
    ref: AppRef!
    limit: Int
}

#
input AppRef {
    #
    namespace: String!
    #
    name: String!
}

#
input NamespaceRef {
    #
    name: String!
}

#
input AppInput {
    #
    namespace: String!
    #
    chart: String!
    #
    app_name: String!
    #
    config: Map!
}

# Queries fetch resources
type Query {
    # getApp gets an apps/releases in the given namespace
    getApp(input: AppRef!): App
    # getHistory gets a list of previous versions of the app
    getHistory(input: HistoryFilter!): [App!]
    # searchApps searches for apps/releases
    searchApps(input: AppFilter!): [App!]
    # searchCharts searches for a helm chart
    searchCharts(input: ChartFilter!): [Chart!]
}

# Mutations modify resources
type Mutation {
    # installApp installs an app/release in the given namespace
    installApp(input: AppInput!): App
    # updateApp updates an app/release in the given namespace
    updateApp(input: AppInput!): App
    # rollbackApp rolls the app/release back to the previous version in the given namespace
    rollbackApp(input: AppRef!): App
    # uninstallApp uninstalls an app/release in the given namespace
    uninstallApp(input: AppRef!): String
}